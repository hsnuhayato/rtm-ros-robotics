<launch>
  <include file="$(find hrpsys_ros_bridge)/launch/hrp4c_startup.launch" />
  <include file="$(find hrpsys_ros_bridge)/launch/hrp4c_ros_bridge.launch" />

  <sphinxdoc><![CDATA[

.. code-block:: bash

  rosrun roseus roseus `rospack find hrpsys_ros_bridge`/scripts/hrp4c-pickup.l

This launch file shows an example of ros bridge for open hrp4 robot, `hrp4c.launch` file launches folloiwng two program

1. `roslaunch hrpsys_ros_bridge hrp4c_startup.launch` : launch simulated robot environment, if you use real robot, you don't need this line

2. `roslaunch hrpsys_ros_bridge hrp4c_ros_bridge.launch` : launch rtm ros bridge

After that, we need to invoke the client program. Following program is the example of euslisp language

3. `rosrun roseus roseus hrp4c-pickup.l` : sample euslisp script to control the robot.

.. image:: build/images/HRP4C_PickUp.gif
  :width: 600

  ]]></sphinxdoc>
  <test type="test-grxui.py" pkg="openhrp3" time-limit="600"
   test-name="HRP4C_PickUp"
   args="--max-time=30 --capture-window RViz
	 --target-directory=$(find hrpsys_ros_bridge)/build/images
	 --check-tf='/BODY /R_HAND_J1_LINK'
	 --script='rosrun roseus roseus $(find hrpsys_ros_bridge)/scripts/hrp4c-pickup.l __log:=dummy'" /> <!-- add dummy __log/= argument to invoke roseus with non-interactive mode -->
</launch>


