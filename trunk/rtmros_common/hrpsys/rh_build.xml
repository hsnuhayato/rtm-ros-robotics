<?xml version="1.0" encoding="UTF-8"?>
<project name="com.generalrobotix.ui.view.GrxRobotHardwareClientView" default="build.jars" basedir=".">

	<property name="p2.build.repo" value="file:${buildDirectory}/buildRepo"/>
	<property name="basews" value="${ws}"/>
	<property name="baseos" value="${os}"/>
	<property name="basearch" value="${arch}"/>
	<property name="basenl" value="${nl}"/>
	<property name="bundleId" value="com.generalrobotix.ui.view.GrxRobotHardwareClientView"/>
	<property name="bundleVersion" value="3.1.0"/>
	<property name="p2.publishonerror" value="false"/>

	<!-- Compiler settings. -->
	<property name="javacFailOnError" value="false"/>
	<property name="javacDebugInfo" value="on"/>
	<property name="javacVerbose" value="false"/>
	<property name="logExtension" value=".log"/>
	<property name="compilerArg" value=""/>
	<property name="javacSource" value="1.3"/>
	<property name="javacTarget" value="1.2"/>
	<condition property="dir_bootclasspath" value="${java.home}/../Classes">
		<os family="mac"/>
	</condition>
	<property name="dir_bootclasspath" value="${java.home}/lib"/>
	<path id="path_bootclasspath">
		<fileset dir="${dir_bootclasspath}">
			<include name="*.jar"/>
		</fileset>
	</path>
	<property name="bootclasspath" refid="path_bootclasspath"/>
	<property name="bundleJavacSource" value="${javacSource}"/>
	<property name="bundleJavacTarget" value="${javacTarget}"/>
	<property name="bundleBootClasspath" value="${bootclasspath}"/>

	<target name="init" depends="properties">
		<condition property="pluginTemp" value="${buildTempFolder}/plugins"		>
			<isset property="buildTempFolder"/>
		</condition>
		<property name="pluginTemp" value="${basedir}"/>
		<condition property="build.result.folder" value="${pluginTemp}/com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0"		>
			<isset property="buildTempFolder"/>
		</condition>
		<property name="build.result.folder" value="${basedir}"/>
		<property name="temp.folder" value="${basedir}/temp.folder"/>
		<property name="plugin.destination" value="${basedir}"/>
		<condition property="p2.publish.parts" value="true"		>
			<istrue value="${p2.gathering}"/>
		</condition>
		<property name="compilation.problem.marker" value="${build.result.folder}/compilation.problem"/>
		<condition property="compilation.problem.marker.exists" value="true"		>
			<and>
			<available file="${compilation.problem.marker}"/>
			<isfalse value="p2.publishonerror"/>
			</and>
		</condition>
	</target>

	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>

	</target>

	<target name="build.update.jar" depends="init" description="Build the plug-in: com.generalrobotix.ui.view.GrxRobotHardwareClientView for an update site.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<jar destfile="${plugin.destination}/com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0.jar" basedir="${temp.folder}/com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0" filesetmanifest="merge"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="robothardwareserviceclient.jar" depends="init" unless="robothardwareserviceclient.jar" description="Create jar: com.generalrobotix.ui.view.GrxRobotHardwareClientView robothardwareserviceclient.jar.">
		<delete dir="${temp.folder}/robothardwareserviceclient.jar.bin"/>
		<mkdir dir="${temp.folder}/robothardwareserviceclient.jar.bin"/>
		<path id="robothardwareserviceclient.jar.classpath">
			<pathelement path="../../../../../../../../.eclipse/org.eclipse.platform_3.5.0_155965261/plugins/com.generalrobotix.ui.grxui_0.9.8.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.ui_3.5.2.M20100120-0800.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.core.runtime_3.5.0.v20090525.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.osgi_3.5.2.R35x_v20100126.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.equinox.common_3.5.1.R35x_v20090807-1100.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.core.jobs_3.4.100.v20090429-1800.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.core.runtime.compatibility.registry_3.2.200.v20090429-1800/runtime_registry_compatibility.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.core.runtime.compatibility.registry_3.2.200.v20090429-1800"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.equinox.registry_3.4.100.v20090520-1800.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.equinox.preferences_3.2.301.R35x_v20091117.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.core.contenttype_3.4.1.R35x_v20090826-0451.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.core.runtime.compatibility.auth_3.2.100.v20090413.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.equinox.app_1.2.1.R35x_v20091203.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.osgi.services_3.2.0.v20090520-1800.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/javax.servlet_2.5.0.v200806031605.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.swt_3.5.2.v3557f.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.swt.gtk.linux.x86_64_3.5.2.v3557f.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.jface_3.5.2.M20100120-0800.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.core.commands_3.5.0.I20090525-2000.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.ui.workbench_3.5.2.M20100113-0800.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.ui.workbench.compatibility_3.2.0.I20090429-1800/compatibility.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.ui.workbench.compatibility_3.2.0.I20090429-1800/e4-workbench.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.ui.workbench.compatibility_3.2.0.I20090429-1800"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/com.ibm.icu_4.0.1.v20100125.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.help_3.4.1.v20090805_35x.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.core.expressions_3.4.101.R35x_v20100209.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.jface.databinding_1.3.1.M20090826-0800.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.core.databinding.observable_1.2.0.M20090902-0800.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.core.databinding.property_1.2.0.M20090819-0800.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.core.databinding_1.2.0.M20090819-0800.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.core.resources_3.5.2.R35x_v20091203-1235.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.core.resources.compatibility_3.4.1.R35x_v20100113-0530.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.ant.core_3.2.101.v20091110_r352.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.core.variables_3.2.200.v20090521.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.core.filesystem_1.2.1.R35x_v20091203-1235.jar"/>
			<pathelement path="../../../../../../../../../../usr/lib/eclipse/plugins/org.eclipse.core.filesystem.linux.x86_64_1.1.0.R35x_v20091203-1235.jar"/>
			<pathelement path="../../../../../../../../.eclipse/org.eclipse.platform_3.5.0_155965261/plugins/java3d_1.5.1/lib/ext/j3dcore.jar"/>
			<pathelement path="../../../../../../../../.eclipse/org.eclipse.platform_3.5.0_155965261/plugins/java3d_1.5.1/lib/ext/j3dutils.jar"/>
			<pathelement path="../../../../../../../../.eclipse/org.eclipse.platform_3.5.0_155965261/plugins/java3d_1.5.1/lib/ext/vecmath.jar"/>
			<pathelement path="../../../../../../../../.eclipse/org.eclipse.platform_3.5.0_155965261/plugins/java3d_linux_amd64_1.5.1.jar"/>
			<pathelement path="../../../../../../../../.eclipse/org.eclipse.platform_3.5.0_155965261/plugins/jogl_1.1.2/lib/gluegen-rt.jar"/>
			<pathelement path="../../../../../../../../.eclipse/org.eclipse.platform_3.5.0_155965261/plugins/jogl_1.1.2/lib/jogl.jar"/>
			<pathelement path="../../../../../../../../.eclipse/org.eclipse.platform_3.5.0_155965261/plugins/jogl_1.1_linux_amd64_1.1.2.jar"/>
			<pathelement path="../../../../../../../../.eclipse/org.eclipse.platform_3.5.0_155965261/plugins/jogl_1.1_linux_i586_1.1.2.jar"/>
			<pathelement path="RobotHardwareService.jar"/>
			<pathelement path="${build.result.folder}/../com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0/RobotHardwareService.jar"/>
			<pathelement path="StateHolderService.jar"/>
			<pathelement path="${build.result.folder}/../com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0/StateHolderService.jar"/>
		</path>
		<!-- compile the source code -->
		<javac destdir="${temp.folder}/robothardwareserviceclient.jar.bin" failonerror="${javacFailOnError}" verbose="${javacVerbose}" debug="${javacDebugInfo}" includeAntRuntime="no" bootclasspath="${bundleBootClasspath}" source="${bundleJavacSource}" target="${bundleJavacTarget}" encoding="UTF-8"		>
			<compilerarg line="${compilerArg}" compiler="${build.compiler}"/>
			<classpath refid="robothardwareserviceclient.jar.classpath" />
			<src path="src/"			/>
			<compilerarg value="@${basedir}/javaCompiler.rh.jar.args" compiler="org.eclipse.jdt.core.JDTCompilerAdapter"/>
			<compilerarg line="-log '${temp.folder}/robothardwareserviceclient.jar.bin${logExtension}'" compiler="org.eclipse.jdt.core.JDTCompilerAdapter"/>
		</javac>
		<antcall target="checkCompilationResults"/>
		<!-- Copy necessary resources -->
		<copy todir="${temp.folder}/robothardwareserviceclient.jar.bin" failonerror="true" overwrite="false">
			<fileset dir="src/">
				<exclude name="**/*.java"/>
				<exclude name="**/package.htm*"/>
			</fileset>
		</copy>
		<mkdir dir="${build.result.folder}"/>
		<jar destfile="${build.result.folder}/robothardwareserviceclient.jar" basedir="${temp.folder}/robothardwareserviceclient.jar.bin"/>
		<delete dir="${temp.folder}/robothardwareserviceclient.jar.bin"/>
	</target>

	<target name="robothardwareserviceclientsrc.zip" depends="init" unless="robothardwareserviceclientsrc.zip">
		<mkdir dir="${build.result.folder}"/>
		<antcall target="zip.robothardwareserviceclientsrc.zip"/>
	</target>
	<target name="zip.robothardwareserviceclientsrc.zip">
		<zip destfile="${build.result.folder}/robothardwareserviceclientsrc.zip" filesonly="false" whenempty="skip" update="false">
			<fileset dir="src/">
				<include name="**/*.java"/>
			</fileset>
		</zip>
	</target>
	<target name="copy.robothardwareserviceclientsrc.zip">
		<copy todir="${source.destination.folder}/robothardwareserviceclientsrc" failonerror="true" overwrite="true">
			<fileset dir="src/">
				<include name="**/*.java"/>
			</fileset>
		</copy>
	</target>

	<target name="build.jars" depends="init" description="Compile classes and build nested jars for the plug-in: com.generalrobotix.ui.view.GrxRobotHardwareClientView.">
		<delete file="${compilation.problem.marker}" quiet="true"/>
		<available property="robothardwareserviceclient.jar" file="${build.result.folder}/robothardwareserviceclient.jar"/>
		<antcall target="robothardwareserviceclient.jar"/>
	</target>

	<target name="checkCompilationResults" if="compilation.error.occured">
		<echo file="${compilation.problem.marker}" message="com.generalrobotix.ui.view.GrxRobotHardwareClientView : compilation.error.occured=${compilation.error.occured}"/>
	</target>

	<target name="build.sources" depends="init">
		<available property="robothardwareserviceclientsrc.zip" file="${build.result.folder}/robothardwareserviceclientsrc.zip"/>
		<antcall target="robothardwareserviceclientsrc.zip"/>
	</target>

	<target name="publish.bin.parts" depends="init" if="p2.publish.parts" unless="compilation.problem.marker.exists">
		<mkdir dir="${build.result.folder}/com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0"/>
		<copy todir="${build.result.folder}" failonerror="true" overwrite="true">
			<fileset dir="${basedir}">
				<include name="META-INF/MANIFEST.MF"/>
				<include name="plugin.xml"/>
				<include name="fragment.xml"/>
			</fileset>
		</copy>
		<antcall target="apitools.generation">
			<param name="target.folder" value="${build.result.folder}"/>
			<param name="projectLocation" value="${basedir}"/>
			<param name="binary.folders" value="${build.result.folder}/robothardwareserviceclient.jar:/home/k-okada/ros/diamondback/rtm-ros-robotics/rtmros_common/hrpsys/build/hrpsys-bsae/plugin/StateHolderService.jar:/home/k-okada/ros/diamondback/rtm-ros-robotics/rtmros_common/hrpsys/build/hrpsys-bsae/plugin/RobotHardwareService.jar"/>
			<param name="projectName" value="${bundleId}_${bundleVersion}"/>
		</antcall>
		<eclipse.gatherBundle 
		   metadataRepository="${p2.build.repo}"
		   artifactRepository="${p2.build.repo}"
		   buildResultFolder="${build.result.folder}"
		   baseDirectory="${basedir}"
		/>
	</target>

	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0"/>
		<copy todir="${destination.temp.folder}/com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0" failonerror="true" overwrite="false">
			<fileset dir="${build.result.folder}">
				<include name="robothardwareserviceclient.jar"/>
			</fileset>
		</copy>
		<copy todir="${destination.temp.folder}/com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0" failonerror="true" overwrite="true">
			<fileset dir="${basedir}">
				<include name="META-INF/"/>
				<include name="fragment.xml"/>
				<include name="RobotHardwareService.jar"/>
				<include name="StateHolderService.jar"/>
				<include name="robothardwareserviceclient.jar"/>
			</fileset>
		</copy>
		<antcall target="apitools.generation">
			<param name="target.folder" value="${destination.temp.folder}/com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0"/>
			<param name="projectLocation" value="${basedir}"/>
			<param name="binary.folders" value="${destination.temp.folder}/com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0/robothardwareserviceclient.jar:/home/k-okada/ros/diamondback/rtm-ros-robotics/rtmros_common/hrpsys/build/hrpsys-bsae/plugin/StateHolderService.jar:/home/k-okada/ros/diamondback/rtm-ros-robotics/rtmros_common/hrpsys/build/hrpsys-bsae/plugin/RobotHardwareService.jar"/>
			<param name="projectName" value="${bundleId}_${bundleVersion}"/>
		</antcall>
	</target>

	<target name="build.zips" depends="init">
	</target>

	<target name="gather.sources" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0"/>
		<copy file="${build.result.folder}/robothardwareserviceclientsrc.zip" todir="${destination.temp.folder}/com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0" failonerror="false" overwrite="false"/>
		<antcall target="copy.src.includes">
			<param name="source.destination.folder" value="${destination.temp.folder}/com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0"/>
		</antcall>
	</target>

	<target name="gather.individual.sources" depends="init">
		<antcall target="copy.robothardwareserviceclientsrc.zip">
			<param name="source.destination.folder" value="${destination.temp.folder}"/>
		</antcall>
		<antcall target="copy.src.includes">
			<param name="source.destination.folder" value="${destination.temp.folder}"/>
		</antcall>
	</target>

	<target name="copy.src.includes" depends="init">
	</target>

	<target name="gather.logs" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0"/>
		<copy todir="${destination.temp.folder}/com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0" failonerror="false" overwrite="false">
			<fileset dir="${temp.folder}">
				<include name="robothardwareserviceclient.jar.bin${logExtension}"/>
			</fileset>
		</copy>
	</target>

	<target name="clean" depends="init" description="Clean the plug-in: com.generalrobotix.ui.view.GrxRobotHardwareClientView of all the zips, jars and logs created.">
		<delete file="${build.result.folder}/robothardwareserviceclient.jar"/>
		<delete file="${build.result.folder}/robothardwareserviceclientsrc.zip"/>
		<delete file="${plugin.destination}/com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0.jar"/>
		<delete file="${plugin.destination}/com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0.zip"/>
		<delete dir="${temp.folder}"/>
		<delete file="${compilation.problem.marker}" quiet="true"/>
	</target>

	<target name="refresh" depends="init" if="eclipse.running" description="Refresh this folder.">
		<eclipse.convertPath fileSystemPath="/home/k-okada/ros/diamondback/rtm-ros-robotics/rtmros_common/hrpsys/build/hrpsys-bsae/plugin" property="resourcePath"/>
		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
	</target>

	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: com.generalrobotix.ui.view.GrxRobotHardwareClientView.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="build.sources"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<antcall target="gather.sources">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<delete>
			<fileset dir="${temp.folder}">
				<include name="**/*.bin${logExtension}"/>
			</fileset>
		</delete>
		<zip destfile="${plugin.destination}/com.generalrobotix.ui.view.GrxRobotHardwareClientView_3.1.0.zip" basedir="${temp.folder}" filesonly="true" whenempty="skip" update="false"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="apitools.generation" if="generateAPIDescription">
		<apitooling.apigeneration  projectName="${projectName}" project="${projectLocation}" binary="${binary.folders}" target="${target.folder}"		/>
	</target>

</project>
