diff -r 6d3bd6e3ba2d server/ModelLoader/BodyInfoCollada_impl.cpp
--- a/server/ModelLoader/BodyInfoCollada_impl.cpp	Mon Jul 04 22:25:23 2011 +0900
+++ b/server/ModelLoader/BodyInfoCollada_impl.cpp	Fri Jul 08 13:26:17 2011 +0900
@@ -223,8 +223,35 @@
         for(size_t i = 0; i < _veclinks.size(); ++i) {
             probot->links_[i] = *_veclinks[i];
             probot->linkShapeIndices_[i] = probot->links_[i].shapeIndices;
-        }
 
+	    //
+	    // segments
+	    int numSegment = 1;
+	    probot->links_[i].segments.length(numSegment);
+	    probot->links_[i].inlinedShapeTransformMatrices.length(numSegment);
+	    for ( int s = 0; s < numSegment; ++s ) {
+	      SegmentInfo_var segmentInfo(new SegmentInfo());
+	      Matrix44 T;
+	      hrp::calcRodrigues(T, Vector3(0,0,1), 0.0);
+	      int p = 0;
+	      for(int row=0; row < 3; ++row){
+		for(int col=0; col < 4; ++col){
+		  segmentInfo->transformMatrix[p++] = T(row, col);
+		}
+	      }
+	      memcpy(probot->links_[i].inlinedShapeTransformMatrices[s],segmentInfo->transformMatrix, sizeof(DblArray12));
+	      segmentInfo->name = CORBA::string_dup(probot->links_[i].name);
+	      segmentInfo->shapeIndices.length(probot->links_[i].shapeIndices.length());
+	      for(int j = 0; j < probot->links_[i].shapeIndices.length(); j++ ) {
+		segmentInfo->shapeIndices[j] = j;
+	      }
+	      segmentInfo->mass = probot->links_[i].mass;
+	      segmentInfo->centerOfMass[0] = probot->links_[i].centerOfMass[0];
+	      segmentInfo->centerOfMass[1] = probot->links_[i].centerOfMass[1];
+	      segmentInfo->centerOfMass[2] = probot->links_[i].centerOfMass[2];
+	      probot->links_[i].segments[s] = segmentInfo;
+	    }
+	}
         //applyTriangleMeshShaper(modelNodeSet.humanoidNode());
     
         // build coldetModels 
