<launch>
  <arg name="ROBOT_NAME" />
  <arg name="MODEL_FILE" />
  <arg name="COLLADA_FILE" />
  <arg name="SIMULATOR_NAME" default="$(arg ROBOT_NAME)(Robot)0"/>
  <!--
      roslaunch hrpsys_ros_bridge sample.launch nameserver:=192.168.1.1
  -->
  <!-- BEGIN:openrtm setting -->
  <arg name="nameserver" default="localhost" />
  <env name="RTCTREE_NAMESERVERS" value="$(arg nameserver)" />
  <arg name="openrtm_args" value='-o "corba.nameservers:$(arg nameserver):2809" -o "naming.formats:%n.rtc" -o "manager.modules.load_path:$(find hrpsys)/lib" -o "manager.modules.preload:hrpEC.so" -o "exec_cxt.periodic.type:hrpExecutionContext" -o "logger.file_name:/tmp/rtc%p.log"' />
  <!-- END:openrtm setting -->
  <arg name="OUTPUT" default="screen"/>
  <env name="LANG" value="C" />
  <env name="ORBgiopMaxMsgSize" value="2147483648" />

  <node name = "HrpsysSeqStateROSBridge"
        pkg  = "hrpsys_ros_bridge"
        type = "HrpsysSeqStateROSBridge"
        args = "$(arg openrtm_args) -o model:$(arg MODEL_FILE)"
        output = "$(arg OUTPUT)" />
  <node name = "HrpsysJointTrajectoryBridge"
        pkg  = "hrpsys_ros_bridge"
        type = "HrpsysJointTrajectoryBridge"
        args = "$(arg openrtm_args) -o model:$(arg MODEL_FILE)"
        output = "$(arg OUTPUT)" />
  <node pkg="hrpsys_ros_bridge" name="ImageSensorROSBridge" type="ImageSensorROSBridge"
        output="$(arg OUTPUT)" args="$(arg openrtm_args)" >
    <param name="frame_id" value="/VISION_SENSOR1" />
  </node>
  <node pkg="hrpsys" name="DataLoggerServiceROSBridge" type="DataLoggerServiceROSBridgeComp"
        output="$(arg OUTPUT)" args="$(arg openrtm_args)" />
  <!-- -o "exec_cxt.periodic.type:SynchExtTriggerEC" -->
  <node pkg="hrpsys" name="SequencePlayerServiceROSBridge" type="SequencePlayerServiceROSBridgeComp"
        output="$(arg OUTPUT)" args="$(arg openrtm_args)" />
  <node pkg="hrpsys" name="CollisionDetectorServiceROSBridge" type="CollisionDetectorServiceROSBridgeComp"
        output="$(arg OUTPUT)" args="$(arg openrtm_args)" />

  <param name="robot_description" textfile="$(arg COLLADA_FILE)" />
  <node pkg="robot_state_publisher" type="state_publisher" name="hrpsys_state_publisher" />

  <!-- diagnostics -->
  <moge>
  <node pkg="hrpsys_ros_bridge" name="hrpsys_ros_diagnostics" type="diagnostics.py" />
  <node pkg="hrpsys_ros_bridge" name="hrpsys_profile" type="hrpsys_profile.py" />
  <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator" >
    <rosparam command="load" file="$(find hrpsys_ros_bridge)/scripts/diagnostics.yaml" />
  </node>
  </moge>

  <!-- BEGIN:openrtm connection -->
  <env name="ROBOT_NAME" value="$(arg ROBOT_NAME)" />
  <env name="SIMULATOR_NAME" value="$(arg SIMULATOR_NAME)" />
  <node name="rtmlaunch_hrpsys_ros_bridge" pkg="openrtm" type="rtmlaunch.py" args="$(find hrpsys_ros_bridge)/launch/hrpsys_ros_bridge.launch"/>
  <rtconnect from="$(arg SIMULATOR_NAME).rtc:q" to="HrpsysSeqStateROSBridge0.rtc:rsangle" />
  <rtconnect from="sh.rtc:baseTformOut" to="HrpsysSeqStateROSBridge0.rtc:baseTform" />
  <rtconnect from="HrpsysSeqStateROSBridge0.rtc:SequencePlayerService" to="seq.rtc:SequencePlayerService" />
  <rtconnect from="HrpsysJointTrajectoryBridge0.rtc:SequencePlayerService" to="seq.rtc:SequencePlayerService" />
  <!-- <rtconnect from="$(arg ROBOT_NAME)(Robot)0.rtc:left-eye" to="ImageSensorROSBridge0.rtc:image" /> -->
  <rtconnect from="DataLoggerServiceROSBridge.rtc:DataLoggerService" to="log.rtc:DataLoggerService" />
  <rtconnect from="SequencePlayerServiceROSBridge.rtc:SequencePlayerService" to="seq.rtc:SequencePlayerService" />
  <rtconnect from="CollisionDetectorServiceROSBridge.rtc:CollisionDetectorService" to="co.rtc:CollisionDetectorService" />
  <rtactivate component="HrpsysSeqStateROSBridge0.rtc" />
  <rtactivate component="HrpsysJointTrajectoryBridge0.rtc" />
  <rtactivate component="ImageSensorROSBridge0.rtc" />
  <rtactivate component="DataLoggerServiceROSBridge.rtc" />
  <rtactivate component="SequencePlayerServiceROSBridge.rtc" />
  <rtactivate component="CollisionDetectorServiceROSBridge.rtc" />
  <!-- END:openrtm connection -->
</launch>

