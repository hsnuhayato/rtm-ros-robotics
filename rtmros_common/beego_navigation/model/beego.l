;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass beego-object
  :super cascaded-link
  :slots (sensors
         ))
(defmethod beego-object
  (:init
   (&rest args &key (name "beego") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :beego-bodyset9
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -137.0 137.0 225.0) (float-vector -108.0 137.0 225.0) (float-vector -108.0 137.0 15.0) (float-vector -137.0 137.0 15.0)))
         (instance face :init :vertices (list (float-vector -137.0 137.0 225.0) (float-vector -137.0 108.0 225.0) (float-vector -108.0 108.0 225.0) (float-vector -108.0 137.0 225.0)))
         (instance face :init :vertices (list (float-vector -108.0 108.0 225.0) (float-vector -108.0 108.0 15.0) (float-vector -108.0 137.0 15.0) (float-vector -108.0 137.0 225.0)))
         (instance face :init :vertices (list (float-vector -137.0 108.0 225.0) (float-vector -137.0 108.0 15.0) (float-vector -108.0 108.0 15.0) (float-vector -108.0 108.0 225.0)))
         (instance face :init :vertices (list (float-vector -137.0 137.0 15.0) (float-vector -137.0 108.0 15.0) (float-vector -137.0 108.0 225.0) (float-vector -137.0 137.0 225.0)))
         (instance face :init :vertices (list (float-vector -137.0 -108.0 225.0) (float-vector -108.0 -108.0 225.0) (float-vector -108.0 -108.0 15.0) (float-vector -137.0 -108.0 15.0)))
         (instance face :init :vertices (list (float-vector -137.0 -108.0 225.0) (float-vector -137.0 -137.0 225.0) (float-vector -108.0 -137.0 225.0) (float-vector -108.0 -108.0 225.0)))
         (instance face :init :vertices (list (float-vector -108.0 -137.0 225.0) (float-vector -108.0 -137.0 15.0) (float-vector -108.0 -108.0 15.0) (float-vector -108.0 -108.0 225.0)))
         (instance face :init :vertices (list (float-vector -137.0 -137.0 225.0) (float-vector -137.0 -137.0 15.0) (float-vector -108.0 -137.0 15.0) (float-vector -108.0 -137.0 225.0)))
         (instance face :init :vertices (list (float-vector -137.0 -108.0 15.0) (float-vector -137.0 -137.0 15.0) (float-vector -137.0 -137.0 225.0) (float-vector -137.0 -108.0 225.0)))
         (instance face :init :vertices (list (float-vector 137.5 137.5 -15.0) (float-vector 137.5 -137.5 -15.0) (float-vector -137.5 -137.5 -15.0) (float-vector -137.5 137.5 -15.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 107.5 107.5 -15.0) (float-vector -107.5 107.5 -15.0) (float-vector -107.5 -107.5 -15.0) (float-vector 107.5 -107.5 -15.0)))
))
         (instance face :init :vertices (list (float-vector 137.5 137.5 -15.0) (float-vector 137.5 137.5 15.0) (float-vector 137.5 -137.5 15.0) (float-vector 137.5 -137.5 -15.0)))
         (instance face :init :vertices (list (float-vector 107.5 107.5 -15.0) (float-vector 107.5 107.5 15.0) (float-vector -107.5 107.5 15.0) (float-vector -107.5 107.5 -15.0)))
         (instance face :init :vertices (list (float-vector -137.5 137.5 -15.0) (float-vector -137.5 137.5 15.0) (float-vector 137.5 137.5 15.0) (float-vector 137.5 137.5 -15.0)))
         (instance face :init :vertices (list (float-vector -137.5 137.5 15.0) (float-vector -137.5 -137.5 15.0) (float-vector 137.5 -137.5 15.0) (float-vector 137.5 137.5 15.0))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 107.5 107.5 15.0) (float-vector 107.5 -107.5 15.0) (float-vector -107.5 -107.5 15.0) (float-vector -107.5 107.5 15.0)))
         (instance hole :init :vertices (list (float-vector 108.0 -137.0 15.0) (float-vector 108.0 -108.0 15.0) (float-vector 137.0 -108.0 15.0) (float-vector 137.0 -137.0 15.0)))
         (instance hole :init :vertices (list (float-vector -137.0 -137.0 15.0) (float-vector -137.0 -108.0 15.0) (float-vector -108.0 -108.0 15.0) (float-vector -108.0 -137.0 15.0)))
         (instance hole :init :vertices (list (float-vector -137.0 108.0 15.0) (float-vector -137.0 137.0 15.0) (float-vector -108.0 137.0 15.0) (float-vector -108.0 108.0 15.0)))
         (instance hole :init :vertices (list (float-vector 137.0 137.0 15.0) (float-vector 137.0 108.0 15.0) (float-vector 108.0 108.0 15.0) (float-vector 108.0 137.0 15.0)))
))
         (instance face :init :vertices (list (float-vector -107.5 -107.5 15.0) (float-vector -107.5 -107.5 -15.0) (float-vector -107.5 107.5 -15.0) (float-vector -107.5 107.5 15.0)))
         (instance face :init :vertices (list (float-vector -137.5 -137.5 15.0) (float-vector -137.5 -137.5 -15.0) (float-vector 137.5 -137.5 -15.0) (float-vector 137.5 -137.5 15.0)))
         (instance face :init :vertices (list (float-vector -137.5 -137.5 -15.0) (float-vector -137.5 -137.5 15.0) (float-vector -137.5 137.5 15.0) (float-vector -137.5 137.5 -15.0)))
         (instance face :init :vertices (list (float-vector 107.5 -107.5 15.0) (float-vector 107.5 -107.5 -15.0) (float-vector -107.5 -107.5 -15.0) (float-vector -107.5 -107.5 15.0)))
         (instance face :init :vertices (list (float-vector 107.5 -107.5 -15.0) (float-vector 107.5 -107.5 15.0) (float-vector 107.5 107.5 15.0) (float-vector 107.5 107.5 -15.0)))
         (instance face :init :vertices (list (float-vector 108.0 -137.0 15.0) (float-vector 108.0 -137.0 225.0) (float-vector 108.0 -108.0 225.0) (float-vector 108.0 -108.0 15.0)))
         (instance face :init :vertices (list (float-vector 137.0 -137.0 15.0) (float-vector 137.0 -137.0 225.0) (float-vector 108.0 -137.0 225.0) (float-vector 108.0 -137.0 15.0)))
         (instance face :init :vertices (list (float-vector 137.0 -108.0 15.0) (float-vector 137.0 -108.0 225.0) (float-vector 137.0 -137.0 225.0) (float-vector 137.0 -137.0 15.0)))
         (instance face :init :vertices (list (float-vector 137.0 -108.0 225.0) (float-vector 108.0 -108.0 225.0) (float-vector 108.0 -137.0 225.0) (float-vector 137.0 -137.0 225.0)))
         (instance face :init :vertices (list (float-vector 108.0 -108.0 225.0) (float-vector 137.0 -108.0 225.0) (float-vector 137.0 -108.0 15.0) (float-vector 108.0 -108.0 15.0)))
         (instance face :init :vertices (list (float-vector 108.0 137.0 225.0) (float-vector 108.0 137.0 15.0) (float-vector 108.0 108.0 15.0) (float-vector 108.0 108.0 225.0)))
         (instance face :init :vertices (list (float-vector 137.0 108.0 15.0) (float-vector 137.0 108.0 225.0) (float-vector 108.0 108.0 225.0) (float-vector 108.0 108.0 15.0)))
         (instance face :init :vertices (list (float-vector 137.0 137.0 15.0) (float-vector 137.0 137.0 225.0) (float-vector 137.0 108.0 225.0) (float-vector 137.0 108.0 15.0)))
         (instance face :init :vertices (list (float-vector 137.0 137.0 225.0) (float-vector 108.0 137.0 225.0) (float-vector 108.0 108.0 225.0) (float-vector 137.0 108.0 225.0)))
         (instance face :init :vertices (list (float-vector 108.0 137.0 225.0) (float-vector 137.0 137.0 225.0) (float-vector 137.0 137.0 15.0) (float-vector 108.0 137.0 15.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 85.507 -167.5 -20.5) (float-vector 91.0 -167.5 6.661338e-15) (float-vector 85.507 -167.5 20.5) (float-vector 70.5 -167.5 35.507) (float-vector 50.0 -167.5 41.0) (float-vector 29.5 -167.5 35.507) (float-vector 14.493 -167.5 20.5) (float-vector 9.0 -167.5 5.639933e-14) (float-vector 14.493 -167.5 -20.5) (float-vector 29.5 -167.5 -35.507) (float-vector 50.0 -167.5 -41.0) (float-vector 70.5 -167.5 -35.507)))
         (instance face :init :vertices (list (float-vector 91.0 -137.5 0.0) (float-vector 85.507 -137.5 -20.5) (float-vector 70.5 -137.5 -35.507) (float-vector 50.0 -137.5 -41.0) (float-vector 29.5 -137.5 -35.507) (float-vector 14.493 -137.5 -20.5) (float-vector 9.0 -137.5 4.973799e-14) (float-vector 14.493 -137.5 20.5) (float-vector 29.5 -137.5 35.507) (float-vector 50.0 -137.5 41.0) (float-vector 70.5 -137.5 35.507) (float-vector 85.507 -137.5 20.5)))
         (instance face :init :vertices (list (float-vector 85.507 -167.5 -20.5) (float-vector 85.507 -137.5 -20.5) (float-vector 91.0 -137.5 0.0) (float-vector 91.0 -167.5 6.661338e-15)))
         (instance face :init :vertices (list (float-vector 70.5 -167.5 -35.507) (float-vector 70.5 -137.5 -35.507) (float-vector 85.507 -137.5 -20.5) (float-vector 85.507 -167.5 -20.5)))
         (instance face :init :vertices (list (float-vector 50.0 -167.5 -41.0) (float-vector 50.0 -137.5 -41.0) (float-vector 70.5 -137.5 -35.507) (float-vector 70.5 -167.5 -35.507)))
         (instance face :init :vertices (list (float-vector 29.5 -167.5 -35.507) (float-vector 29.5 -137.5 -35.507) (float-vector 50.0 -137.5 -41.0) (float-vector 50.0 -167.5 -41.0)))
         (instance face :init :vertices (list (float-vector 14.493 -167.5 -20.5) (float-vector 14.493 -137.5 -20.5) (float-vector 29.5 -137.5 -35.507) (float-vector 29.5 -167.5 -35.507)))
         (instance face :init :vertices (list (float-vector 9.0 -167.5 5.639933e-14) (float-vector 9.0 -137.5 4.973799e-14) (float-vector 14.493 -137.5 -20.5) (float-vector 14.493 -167.5 -20.5)))
         (instance face :init :vertices (list (float-vector 14.493 -167.5 20.5) (float-vector 14.493 -137.5 20.5) (float-vector 9.0 -137.5 4.973799e-14) (float-vector 9.0 -167.5 5.639933e-14)))
         (instance face :init :vertices (list (float-vector 29.5 -167.5 35.507) (float-vector 29.5 -137.5 35.507) (float-vector 14.493 -137.5 20.5) (float-vector 14.493 -167.5 20.5)))
         (instance face :init :vertices (list (float-vector 50.0 -167.5 41.0) (float-vector 50.0 -137.5 41.0) (float-vector 29.5 -137.5 35.507) (float-vector 29.5 -167.5 35.507)))
         (instance face :init :vertices (list (float-vector 70.5 -167.5 35.507) (float-vector 70.5 -137.5 35.507) (float-vector 50.0 -137.5 41.0) (float-vector 50.0 -167.5 41.0)))
         (instance face :init :vertices (list (float-vector 85.507 -167.5 20.5) (float-vector 85.507 -137.5 20.5) (float-vector 70.5 -137.5 35.507) (float-vector 70.5 -167.5 35.507)))
         (instance face :init :vertices (list (float-vector 91.0 -167.5 6.661338e-15) (float-vector 91.0 -137.5 0.0) (float-vector 85.507 -137.5 20.5) (float-vector 85.507 -167.5 20.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 85.507 167.5 20.5) (float-vector 91.0 167.5 6.661338e-15) (float-vector 85.507 167.5 -20.5) (float-vector 70.5 167.5 -35.507) (float-vector 50.0 167.5 -41.0) (float-vector 29.5 167.5 -35.507) (float-vector 14.493 167.5 -20.5) (float-vector 9.0 167.5 -4.307665e-14) (float-vector 14.493 167.5 20.5) (float-vector 29.5 167.5 35.507) (float-vector 50.0 167.5 41.0) (float-vector 70.5 167.5 35.507)))
         (instance face :init :vertices (list (float-vector 91.0 137.5 0.0) (float-vector 85.507 137.5 20.5) (float-vector 70.5 137.5 35.507) (float-vector 50.0 137.5 41.0) (float-vector 29.5 137.5 35.507) (float-vector 14.493 137.5 20.5) (float-vector 9.0 137.5 -4.973799e-14) (float-vector 14.493 137.5 -20.5) (float-vector 29.5 137.5 -35.507) (float-vector 50.0 137.5 -41.0) (float-vector 70.5 137.5 -35.507) (float-vector 85.507 137.5 -20.5)))
         (instance face :init :vertices (list (float-vector 85.507 167.5 20.5) (float-vector 85.507 137.5 20.5) (float-vector 91.0 137.5 0.0) (float-vector 91.0 167.5 6.661338e-15)))
         (instance face :init :vertices (list (float-vector 70.5 167.5 35.507) (float-vector 70.5 137.5 35.507) (float-vector 85.507 137.5 20.5) (float-vector 85.507 167.5 20.5)))
         (instance face :init :vertices (list (float-vector 50.0 167.5 41.0) (float-vector 50.0 137.5 41.0) (float-vector 70.5 137.5 35.507) (float-vector 70.5 167.5 35.507)))
         (instance face :init :vertices (list (float-vector 29.5 167.5 35.507) (float-vector 29.5 137.5 35.507) (float-vector 50.0 137.5 41.0) (float-vector 50.0 167.5 41.0)))
         (instance face :init :vertices (list (float-vector 14.493 167.5 20.5) (float-vector 14.493 137.5 20.5) (float-vector 29.5 137.5 35.507) (float-vector 29.5 167.5 35.507)))
         (instance face :init :vertices (list (float-vector 9.0 167.5 -4.307665e-14) (float-vector 9.0 137.5 -4.973799e-14) (float-vector 14.493 137.5 20.5) (float-vector 14.493 167.5 20.5)))
         (instance face :init :vertices (list (float-vector 14.493 167.5 -20.5) (float-vector 14.493 137.5 -20.5) (float-vector 9.0 137.5 -4.973799e-14) (float-vector 9.0 167.5 -4.307665e-14)))
         (instance face :init :vertices (list (float-vector 29.5 167.5 -35.507) (float-vector 29.5 137.5 -35.507) (float-vector 14.493 137.5 -20.5) (float-vector 14.493 167.5 -20.5)))
         (instance face :init :vertices (list (float-vector 50.0 167.5 -41.0) (float-vector 50.0 137.5 -41.0) (float-vector 29.5 137.5 -35.507) (float-vector 29.5 167.5 -35.507)))
         (instance face :init :vertices (list (float-vector 70.5 167.5 -35.507) (float-vector 70.5 137.5 -35.507) (float-vector 50.0 137.5 -41.0) (float-vector 50.0 167.5 -41.0)))
         (instance face :init :vertices (list (float-vector 85.507 167.5 -20.5) (float-vector 85.507 137.5 -20.5) (float-vector 70.5 137.5 -35.507) (float-vector 70.5 167.5 -35.507)))
         (instance face :init :vertices (list (float-vector 91.0 167.5 6.661338e-15) (float-vector 91.0 137.5 0.0) (float-vector 85.507 137.5 -20.5) (float-vector 85.507 167.5 -20.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -95.0 -150.0 285.0) (float-vector 125.0 -150.0 285.0) (float-vector 126.564 -149.877 285.0) (float-vector 128.09 -149.511 285.0) (float-vector 129.54 -148.91 285.0) (float-vector 130.878 -148.09 285.0) (float-vector 132.071 -147.071 285.0) (float-vector 133.09 -145.878 285.0) (float-vector 133.91 -144.54 285.0) (float-vector 134.511 -143.09 285.0) (float-vector 134.877 -141.564 285.0) (float-vector 135.0 -140.0 285.0) (float-vector 135.0 140.0 285.0) (float-vector 134.877 141.564 285.0) (float-vector 134.511 143.09 285.0) (float-vector 133.91 144.54 285.0) (float-vector 133.09 145.878 285.0) (float-vector 132.071 147.071 285.0) (float-vector 130.878 148.09 285.0) (float-vector 129.54 148.91 285.0) (float-vector 128.09 149.511 285.0) (float-vector 126.564 149.877 285.0) (float-vector 125.0 150.0 285.0) (float-vector -95.0 150.0 285.0) (float-vector -96.5643 149.877 285.0) (float-vector -98.0902 149.511 285.0) (float-vector -99.5399 148.91 285.0) (float-vector -100.878 148.09 285.0) (float-vector -102.071 147.071 285.0) (float-vector -103.09 145.878 285.0) (float-vector -103.91 144.54 285.0) (float-vector -104.511 143.09 285.0) (float-vector -104.877 141.564 285.0) (float-vector -105.0 140.0 285.0) (float-vector -105.0 -140.0 285.0) (float-vector -104.877 -141.564 285.0) (float-vector -104.511 -143.09 285.0) (float-vector -103.91 -144.54 285.0) (float-vector -103.09 -145.878 285.0) (float-vector -102.071 -147.071 285.0) (float-vector -100.878 -148.09 285.0) (float-vector -99.5399 -148.91 285.0) (float-vector -98.0902 -149.511 285.0) (float-vector -96.5643 -149.877 285.0)))
         (instance face :init :vertices (list (float-vector 125.0 -150.0 255.0) (float-vector -95.0 -150.0 255.0) (float-vector -96.5643 -149.877 255.0) (float-vector -98.0902 -149.511 255.0) (float-vector -99.5399 -148.91 255.0) (float-vector -100.878 -148.09 255.0) (float-vector -102.071 -147.071 255.0) (float-vector -103.09 -145.878 255.0) (float-vector -103.91 -144.54 255.0) (float-vector -104.511 -143.09 255.0) (float-vector -104.877 -141.564 255.0) (float-vector -105.0 -140.0 255.0) (float-vector -105.0 140.0 255.0) (float-vector -104.877 141.564 255.0) (float-vector -104.511 143.09 255.0) (float-vector -103.91 144.54 255.0) (float-vector -103.09 145.878 255.0) (float-vector -102.071 147.071 255.0) (float-vector -100.878 148.09 255.0) (float-vector -99.5399 148.91 255.0) (float-vector -98.0902 149.511 255.0) (float-vector -96.5643 149.877 255.0) (float-vector -95.0 150.0 255.0) (float-vector 125.0 150.0 255.0) (float-vector 126.564 149.877 255.0) (float-vector 128.09 149.511 255.0) (float-vector 129.54 148.91 255.0) (float-vector 130.878 148.09 255.0) (float-vector 132.071 147.071 255.0) (float-vector 133.09 145.878 255.0) (float-vector 133.91 144.54 255.0) (float-vector 134.511 143.09 255.0) (float-vector 134.877 141.564 255.0) (float-vector 135.0 140.0 255.0) (float-vector 135.0 -140.0 255.0) (float-vector 134.877 -141.564 255.0) (float-vector 134.511 -143.09 255.0) (float-vector 133.91 -144.54 255.0) (float-vector 133.09 -145.878 255.0) (float-vector 132.071 -147.071 255.0) (float-vector 130.878 -148.09 255.0) (float-vector 129.54 -148.91 255.0) (float-vector 128.09 -149.511 255.0) (float-vector 126.564 -149.877 255.0)))
         (instance face :init :vertices (list (float-vector -95.0 -150.0 285.0) (float-vector -95.0 -150.0 255.0) (float-vector 125.0 -150.0 255.0) (float-vector 125.0 -150.0 285.0)))
         (instance face :init :vertices (list (float-vector -96.5643 -149.877 285.0) (float-vector -96.5643 -149.877 255.0) (float-vector -95.0 -150.0 255.0) (float-vector -95.0 -150.0 285.0)))
         (instance face :init :vertices (list (float-vector -98.0902 -149.511 285.0) (float-vector -98.0902 -149.511 255.0) (float-vector -96.5643 -149.877 255.0) (float-vector -96.5643 -149.877 285.0)))
         (instance face :init :vertices (list (float-vector -99.5399 -148.91 285.0) (float-vector -99.5399 -148.91 255.0) (float-vector -98.0902 -149.511 255.0) (float-vector -98.0902 -149.511 285.0)))
         (instance face :init :vertices (list (float-vector -100.878 -148.09 285.0) (float-vector -100.878 -148.09 255.0) (float-vector -99.5399 -148.91 255.0) (float-vector -99.5399 -148.91 285.0)))
         (instance face :init :vertices (list (float-vector -102.071 -147.071 285.0) (float-vector -102.071 -147.071 255.0) (float-vector -100.878 -148.09 255.0) (float-vector -100.878 -148.09 285.0)))
         (instance face :init :vertices (list (float-vector -103.09 -145.878 285.0) (float-vector -103.09 -145.878 255.0) (float-vector -102.071 -147.071 255.0) (float-vector -102.071 -147.071 285.0)))
         (instance face :init :vertices (list (float-vector -103.91 -144.54 285.0) (float-vector -103.91 -144.54 255.0) (float-vector -103.09 -145.878 255.0) (float-vector -103.09 -145.878 285.0)))
         (instance face :init :vertices (list (float-vector -104.511 -143.09 285.0) (float-vector -104.511 -143.09 255.0) (float-vector -103.91 -144.54 255.0) (float-vector -103.91 -144.54 285.0)))
         (instance face :init :vertices (list (float-vector -104.877 -141.564 285.0) (float-vector -104.877 -141.564 255.0) (float-vector -104.511 -143.09 255.0) (float-vector -104.511 -143.09 285.0)))
         (instance face :init :vertices (list (float-vector -105.0 -140.0 285.0) (float-vector -105.0 -140.0 255.0) (float-vector -104.877 -141.564 255.0) (float-vector -104.877 -141.564 285.0)))
         (instance face :init :vertices (list (float-vector -105.0 140.0 285.0) (float-vector -105.0 140.0 255.0) (float-vector -105.0 -140.0 255.0) (float-vector -105.0 -140.0 285.0)))
         (instance face :init :vertices (list (float-vector -104.877 141.564 285.0) (float-vector -104.877 141.564 255.0) (float-vector -105.0 140.0 255.0) (float-vector -105.0 140.0 285.0)))
         (instance face :init :vertices (list (float-vector -104.511 143.09 285.0) (float-vector -104.511 143.09 255.0) (float-vector -104.877 141.564 255.0) (float-vector -104.877 141.564 285.0)))
         (instance face :init :vertices (list (float-vector -103.91 144.54 285.0) (float-vector -103.91 144.54 255.0) (float-vector -104.511 143.09 255.0) (float-vector -104.511 143.09 285.0)))
         (instance face :init :vertices (list (float-vector -103.09 145.878 285.0) (float-vector -103.09 145.878 255.0) (float-vector -103.91 144.54 255.0) (float-vector -103.91 144.54 285.0)))
         (instance face :init :vertices (list (float-vector -102.071 147.071 285.0) (float-vector -102.071 147.071 255.0) (float-vector -103.09 145.878 255.0) (float-vector -103.09 145.878 285.0)))
         (instance face :init :vertices (list (float-vector -100.878 148.09 285.0) (float-vector -100.878 148.09 255.0) (float-vector -102.071 147.071 255.0) (float-vector -102.071 147.071 285.0)))
         (instance face :init :vertices (list (float-vector -99.5399 148.91 285.0) (float-vector -99.5399 148.91 255.0) (float-vector -100.878 148.09 255.0) (float-vector -100.878 148.09 285.0)))
         (instance face :init :vertices (list (float-vector -98.0902 149.511 285.0) (float-vector -98.0902 149.511 255.0) (float-vector -99.5399 148.91 255.0) (float-vector -99.5399 148.91 285.0)))
         (instance face :init :vertices (list (float-vector -96.5643 149.877 285.0) (float-vector -96.5643 149.877 255.0) (float-vector -98.0902 149.511 255.0) (float-vector -98.0902 149.511 285.0)))
         (instance face :init :vertices (list (float-vector -95.0 150.0 285.0) (float-vector -95.0 150.0 255.0) (float-vector -96.5643 149.877 255.0) (float-vector -96.5643 149.877 285.0)))
         (instance face :init :vertices (list (float-vector 125.0 150.0 285.0) (float-vector 125.0 150.0 255.0) (float-vector -95.0 150.0 255.0) (float-vector -95.0 150.0 285.0)))
         (instance face :init :vertices (list (float-vector 126.564 149.877 285.0) (float-vector 126.564 149.877 255.0) (float-vector 125.0 150.0 255.0) (float-vector 125.0 150.0 285.0)))
         (instance face :init :vertices (list (float-vector 128.09 149.511 285.0) (float-vector 128.09 149.511 255.0) (float-vector 126.564 149.877 255.0) (float-vector 126.564 149.877 285.0)))
         (instance face :init :vertices (list (float-vector 129.54 148.91 285.0) (float-vector 129.54 148.91 255.0) (float-vector 128.09 149.511 255.0) (float-vector 128.09 149.511 285.0)))
         (instance face :init :vertices (list (float-vector 130.878 148.09 285.0) (float-vector 130.878 148.09 255.0) (float-vector 129.54 148.91 255.0) (float-vector 129.54 148.91 285.0)))
         (instance face :init :vertices (list (float-vector 132.071 147.071 285.0) (float-vector 132.071 147.071 255.0) (float-vector 130.878 148.09 255.0) (float-vector 130.878 148.09 285.0)))
         (instance face :init :vertices (list (float-vector 133.09 145.878 285.0) (float-vector 133.09 145.878 255.0) (float-vector 132.071 147.071 255.0) (float-vector 132.071 147.071 285.0)))
         (instance face :init :vertices (list (float-vector 133.91 144.54 285.0) (float-vector 133.91 144.54 255.0) (float-vector 133.09 145.878 255.0) (float-vector 133.09 145.878 285.0)))
         (instance face :init :vertices (list (float-vector 134.511 143.09 285.0) (float-vector 134.511 143.09 255.0) (float-vector 133.91 144.54 255.0) (float-vector 133.91 144.54 285.0)))
         (instance face :init :vertices (list (float-vector 134.877 141.564 285.0) (float-vector 134.877 141.564 255.0) (float-vector 134.511 143.09 255.0) (float-vector 134.511 143.09 285.0)))
         (instance face :init :vertices (list (float-vector 135.0 140.0 285.0) (float-vector 135.0 140.0 255.0) (float-vector 134.877 141.564 255.0) (float-vector 134.877 141.564 285.0)))
         (instance face :init :vertices (list (float-vector 135.0 -140.0 285.0) (float-vector 135.0 -140.0 255.0) (float-vector 135.0 140.0 255.0) (float-vector 135.0 140.0 285.0)))
         (instance face :init :vertices (list (float-vector 134.877 -141.564 285.0) (float-vector 134.877 -141.564 255.0) (float-vector 135.0 -140.0 255.0) (float-vector 135.0 -140.0 285.0)))
         (instance face :init :vertices (list (float-vector 134.511 -143.09 285.0) (float-vector 134.511 -143.09 255.0) (float-vector 134.877 -141.564 255.0) (float-vector 134.877 -141.564 285.0)))
         (instance face :init :vertices (list (float-vector 133.91 -144.54 285.0) (float-vector 133.91 -144.54 255.0) (float-vector 134.511 -143.09 255.0) (float-vector 134.511 -143.09 285.0)))
         (instance face :init :vertices (list (float-vector 133.09 -145.878 285.0) (float-vector 133.09 -145.878 255.0) (float-vector 133.91 -144.54 255.0) (float-vector 133.91 -144.54 285.0)))
         (instance face :init :vertices (list (float-vector 132.071 -147.071 285.0) (float-vector 132.071 -147.071 255.0) (float-vector 133.09 -145.878 255.0) (float-vector 133.09 -145.878 285.0)))
         (instance face :init :vertices (list (float-vector 130.878 -148.09 285.0) (float-vector 130.878 -148.09 255.0) (float-vector 132.071 -147.071 255.0) (float-vector 132.071 -147.071 285.0)))
         (instance face :init :vertices (list (float-vector 129.54 -148.91 285.0) (float-vector 129.54 -148.91 255.0) (float-vector 130.878 -148.09 255.0) (float-vector 130.878 -148.09 285.0)))
         (instance face :init :vertices (list (float-vector 128.09 -149.511 285.0) (float-vector 128.09 -149.511 255.0) (float-vector 129.54 -148.91 255.0) (float-vector 129.54 -148.91 285.0)))
         (instance face :init :vertices (list (float-vector 126.564 -149.877 285.0) (float-vector 126.564 -149.877 255.0) (float-vector 128.09 -149.511 255.0) (float-vector 128.09 -149.511 285.0)))
         (instance face :init :vertices (list (float-vector 125.0 -150.0 285.0) (float-vector 125.0 -150.0 255.0) (float-vector 126.564 -149.877 255.0) (float-vector 126.564 -149.877 285.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 60.0 -120.0 210.0) (float-vector 100.0 -120.0 210.0) (float-vector 101.564 -119.877 210.0) (float-vector 103.09 -119.511 210.0) (float-vector 104.54 -118.91 210.0) (float-vector 105.878 -118.09 210.0) (float-vector 107.071 -117.071 210.0) (float-vector 108.09 -115.878 210.0) (float-vector 108.91 -114.54 210.0) (float-vector 109.511 -113.09 210.0) (float-vector 109.877 -111.564 210.0) (float-vector 110.0 -110.0 210.0) (float-vector 110.0 110.0 210.0) (float-vector 109.877 111.564 210.0) (float-vector 109.511 113.09 210.0) (float-vector 108.91 114.54 210.0) (float-vector 108.09 115.878 210.0) (float-vector 107.071 117.071 210.0) (float-vector 105.878 118.09 210.0) (float-vector 104.54 118.91 210.0) (float-vector 103.09 119.511 210.0) (float-vector 101.564 119.877 210.0) (float-vector 100.0 120.0 210.0) (float-vector 60.0 120.0 210.0) (float-vector 58.4357 119.877 210.0) (float-vector 56.9098 119.511 210.0) (float-vector 55.4601 118.91 210.0) (float-vector 54.1221 118.09 210.0) (float-vector 52.9289 117.071 210.0) (float-vector 51.9098 115.878 210.0) (float-vector 51.0899 114.54 210.0) (float-vector 50.4894 113.09 210.0) (float-vector 50.1231 111.564 210.0) (float-vector 50.0 110.0 210.0) (float-vector 50.0 -110.0 210.0) (float-vector 50.1231 -111.564 210.0) (float-vector 50.4894 -113.09 210.0) (float-vector 51.0899 -114.54 210.0) (float-vector 51.9098 -115.878 210.0) (float-vector 52.9289 -117.071 210.0) (float-vector 54.1221 -118.09 210.0) (float-vector 55.4601 -118.91 210.0) (float-vector 56.9098 -119.511 210.0) (float-vector 58.4357 -119.877 210.0)))
         (instance face :init :vertices (list (float-vector 100.0 -120.0 150.0) (float-vector 60.0 -120.0 150.0) (float-vector 58.4357 -119.877 150.0) (float-vector 56.9098 -119.511 150.0) (float-vector 55.4601 -118.91 150.0) (float-vector 54.1221 -118.09 150.0) (float-vector 52.9289 -117.071 150.0) (float-vector 51.9098 -115.878 150.0) (float-vector 51.0899 -114.54 150.0) (float-vector 50.4894 -113.09 150.0) (float-vector 50.1231 -111.564 150.0) (float-vector 50.0 -110.0 150.0) (float-vector 50.0 110.0 150.0) (float-vector 50.1231 111.564 150.0) (float-vector 50.4894 113.09 150.0) (float-vector 51.0899 114.54 150.0) (float-vector 51.9098 115.878 150.0) (float-vector 52.9289 117.071 150.0) (float-vector 54.1221 118.09 150.0) (float-vector 55.4601 118.91 150.0) (float-vector 56.9098 119.511 150.0) (float-vector 58.4357 119.877 150.0) (float-vector 60.0 120.0 150.0) (float-vector 100.0 120.0 150.0) (float-vector 101.564 119.877 150.0) (float-vector 103.09 119.511 150.0) (float-vector 104.54 118.91 150.0) (float-vector 105.878 118.09 150.0) (float-vector 107.071 117.071 150.0) (float-vector 108.09 115.878 150.0) (float-vector 108.91 114.54 150.0) (float-vector 109.511 113.09 150.0) (float-vector 109.877 111.564 150.0) (float-vector 110.0 110.0 150.0) (float-vector 110.0 -110.0 150.0) (float-vector 109.877 -111.564 150.0) (float-vector 109.511 -113.09 150.0) (float-vector 108.91 -114.54 150.0) (float-vector 108.09 -115.878 150.0) (float-vector 107.071 -117.071 150.0) (float-vector 105.878 -118.09 150.0) (float-vector 104.54 -118.91 150.0) (float-vector 103.09 -119.511 150.0) (float-vector 101.564 -119.877 150.0)))
         (instance face :init :vertices (list (float-vector 60.0 -120.0 210.0) (float-vector 60.0 -120.0 150.0) (float-vector 100.0 -120.0 150.0) (float-vector 100.0 -120.0 210.0)))
         (instance face :init :vertices (list (float-vector 58.4357 -119.877 210.0) (float-vector 58.4357 -119.877 150.0) (float-vector 60.0 -120.0 150.0) (float-vector 60.0 -120.0 210.0)))
         (instance face :init :vertices (list (float-vector 56.9098 -119.511 210.0) (float-vector 56.9098 -119.511 150.0) (float-vector 58.4357 -119.877 150.0) (float-vector 58.4357 -119.877 210.0)))
         (instance face :init :vertices (list (float-vector 55.4601 -118.91 210.0) (float-vector 55.4601 -118.91 150.0) (float-vector 56.9098 -119.511 150.0) (float-vector 56.9098 -119.511 210.0)))
         (instance face :init :vertices (list (float-vector 54.1221 -118.09 210.0) (float-vector 54.1221 -118.09 150.0) (float-vector 55.4601 -118.91 150.0) (float-vector 55.4601 -118.91 210.0)))
         (instance face :init :vertices (list (float-vector 52.9289 -117.071 210.0) (float-vector 52.9289 -117.071 150.0) (float-vector 54.1221 -118.09 150.0) (float-vector 54.1221 -118.09 210.0)))
         (instance face :init :vertices (list (float-vector 51.9098 -115.878 210.0) (float-vector 51.9098 -115.878 150.0) (float-vector 52.9289 -117.071 150.0) (float-vector 52.9289 -117.071 210.0)))
         (instance face :init :vertices (list (float-vector 51.0899 -114.54 210.0) (float-vector 51.0899 -114.54 150.0) (float-vector 51.9098 -115.878 150.0) (float-vector 51.9098 -115.878 210.0)))
         (instance face :init :vertices (list (float-vector 50.4894 -113.09 210.0) (float-vector 50.4894 -113.09 150.0) (float-vector 51.0899 -114.54 150.0) (float-vector 51.0899 -114.54 210.0)))
         (instance face :init :vertices (list (float-vector 50.1231 -111.564 210.0) (float-vector 50.1231 -111.564 150.0) (float-vector 50.4894 -113.09 150.0) (float-vector 50.4894 -113.09 210.0)))
         (instance face :init :vertices (list (float-vector 50.0 -110.0 210.0) (float-vector 50.0 -110.0 150.0) (float-vector 50.1231 -111.564 150.0) (float-vector 50.1231 -111.564 210.0)))
         (instance face :init :vertices (list (float-vector 50.0 110.0 210.0) (float-vector 50.0 110.0 150.0) (float-vector 50.0 -110.0 150.0) (float-vector 50.0 -110.0 210.0)))
         (instance face :init :vertices (list (float-vector 50.1231 111.564 210.0) (float-vector 50.1231 111.564 150.0) (float-vector 50.0 110.0 150.0) (float-vector 50.0 110.0 210.0)))
         (instance face :init :vertices (list (float-vector 50.4894 113.09 210.0) (float-vector 50.4894 113.09 150.0) (float-vector 50.1231 111.564 150.0) (float-vector 50.1231 111.564 210.0)))
         (instance face :init :vertices (list (float-vector 51.0899 114.54 210.0) (float-vector 51.0899 114.54 150.0) (float-vector 50.4894 113.09 150.0) (float-vector 50.4894 113.09 210.0)))
         (instance face :init :vertices (list (float-vector 51.9098 115.878 210.0) (float-vector 51.9098 115.878 150.0) (float-vector 51.0899 114.54 150.0) (float-vector 51.0899 114.54 210.0)))
         (instance face :init :vertices (list (float-vector 52.9289 117.071 210.0) (float-vector 52.9289 117.071 150.0) (float-vector 51.9098 115.878 150.0) (float-vector 51.9098 115.878 210.0)))
         (instance face :init :vertices (list (float-vector 54.1221 118.09 210.0) (float-vector 54.1221 118.09 150.0) (float-vector 52.9289 117.071 150.0) (float-vector 52.9289 117.071 210.0)))
         (instance face :init :vertices (list (float-vector 55.4601 118.91 210.0) (float-vector 55.4601 118.91 150.0) (float-vector 54.1221 118.09 150.0) (float-vector 54.1221 118.09 210.0)))
         (instance face :init :vertices (list (float-vector 56.9098 119.511 210.0) (float-vector 56.9098 119.511 150.0) (float-vector 55.4601 118.91 150.0) (float-vector 55.4601 118.91 210.0)))
         (instance face :init :vertices (list (float-vector 58.4357 119.877 210.0) (float-vector 58.4357 119.877 150.0) (float-vector 56.9098 119.511 150.0) (float-vector 56.9098 119.511 210.0)))
         (instance face :init :vertices (list (float-vector 60.0 120.0 210.0) (float-vector 60.0 120.0 150.0) (float-vector 58.4357 119.877 150.0) (float-vector 58.4357 119.877 210.0)))
         (instance face :init :vertices (list (float-vector 100.0 120.0 210.0) (float-vector 100.0 120.0 150.0) (float-vector 60.0 120.0 150.0) (float-vector 60.0 120.0 210.0)))
         (instance face :init :vertices (list (float-vector 101.564 119.877 210.0) (float-vector 101.564 119.877 150.0) (float-vector 100.0 120.0 150.0) (float-vector 100.0 120.0 210.0)))
         (instance face :init :vertices (list (float-vector 103.09 119.511 210.0) (float-vector 103.09 119.511 150.0) (float-vector 101.564 119.877 150.0) (float-vector 101.564 119.877 210.0)))
         (instance face :init :vertices (list (float-vector 104.54 118.91 210.0) (float-vector 104.54 118.91 150.0) (float-vector 103.09 119.511 150.0) (float-vector 103.09 119.511 210.0)))
         (instance face :init :vertices (list (float-vector 105.878 118.09 210.0) (float-vector 105.878 118.09 150.0) (float-vector 104.54 118.91 150.0) (float-vector 104.54 118.91 210.0)))
         (instance face :init :vertices (list (float-vector 107.071 117.071 210.0) (float-vector 107.071 117.071 150.0) (float-vector 105.878 118.09 150.0) (float-vector 105.878 118.09 210.0)))
         (instance face :init :vertices (list (float-vector 108.09 115.878 210.0) (float-vector 108.09 115.878 150.0) (float-vector 107.071 117.071 150.0) (float-vector 107.071 117.071 210.0)))
         (instance face :init :vertices (list (float-vector 108.91 114.54 210.0) (float-vector 108.91 114.54 150.0) (float-vector 108.09 115.878 150.0) (float-vector 108.09 115.878 210.0)))
         (instance face :init :vertices (list (float-vector 109.511 113.09 210.0) (float-vector 109.511 113.09 150.0) (float-vector 108.91 114.54 150.0) (float-vector 108.91 114.54 210.0)))
         (instance face :init :vertices (list (float-vector 109.877 111.564 210.0) (float-vector 109.877 111.564 150.0) (float-vector 109.511 113.09 150.0) (float-vector 109.511 113.09 210.0)))
         (instance face :init :vertices (list (float-vector 110.0 110.0 210.0) (float-vector 110.0 110.0 150.0) (float-vector 109.877 111.564 150.0) (float-vector 109.877 111.564 210.0)))
         (instance face :init :vertices (list (float-vector 110.0 -110.0 210.0) (float-vector 110.0 -110.0 150.0) (float-vector 110.0 110.0 150.0) (float-vector 110.0 110.0 210.0)))
         (instance face :init :vertices (list (float-vector 109.877 -111.564 210.0) (float-vector 109.877 -111.564 150.0) (float-vector 110.0 -110.0 150.0) (float-vector 110.0 -110.0 210.0)))
         (instance face :init :vertices (list (float-vector 109.511 -113.09 210.0) (float-vector 109.511 -113.09 150.0) (float-vector 109.877 -111.564 150.0) (float-vector 109.877 -111.564 210.0)))
         (instance face :init :vertices (list (float-vector 108.91 -114.54 210.0) (float-vector 108.91 -114.54 150.0) (float-vector 109.511 -113.09 150.0) (float-vector 109.511 -113.09 210.0)))
         (instance face :init :vertices (list (float-vector 108.09 -115.878 210.0) (float-vector 108.09 -115.878 150.0) (float-vector 108.91 -114.54 150.0) (float-vector 108.91 -114.54 210.0)))
         (instance face :init :vertices (list (float-vector 107.071 -117.071 210.0) (float-vector 107.071 -117.071 150.0) (float-vector 108.09 -115.878 150.0) (float-vector 108.09 -115.878 210.0)))
         (instance face :init :vertices (list (float-vector 105.878 -118.09 210.0) (float-vector 105.878 -118.09 150.0) (float-vector 107.071 -117.071 150.0) (float-vector 107.071 -117.071 210.0)))
         (instance face :init :vertices (list (float-vector 104.54 -118.91 210.0) (float-vector 104.54 -118.91 150.0) (float-vector 105.878 -118.09 150.0) (float-vector 105.878 -118.09 210.0)))
         (instance face :init :vertices (list (float-vector 103.09 -119.511 210.0) (float-vector 103.09 -119.511 150.0) (float-vector 104.54 -118.91 150.0) (float-vector 104.54 -118.91 210.0)))
         (instance face :init :vertices (list (float-vector 101.564 -119.877 210.0) (float-vector 101.564 -119.877 150.0) (float-vector 103.09 -119.511 150.0) (float-vector 103.09 -119.511 210.0)))
         (instance face :init :vertices (list (float-vector 100.0 -120.0 210.0) (float-vector 100.0 -120.0 150.0) (float-vector 101.564 -119.877 150.0) (float-vector 101.564 -119.877 210.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 172.99 -120.0 -7.5) (float-vector 175.0 -120.0 5.329071e-14) (float-vector 172.99 -120.0 7.5) (float-vector 167.5 -120.0 12.9904) (float-vector 160.0 -120.0 15.0) (float-vector 152.5 -120.0 12.9904) (float-vector 147.01 -120.0 7.5) (float-vector 145.0 -120.0 6.750156e-14) (float-vector 147.01 -120.0 -7.5) (float-vector 152.5 -120.0 -12.9904) (float-vector 160.0 -120.0 -15.0) (float-vector 167.5 -120.0 -12.9904)))
         (instance face :init :vertices (list (float-vector 175.0 120.0 0.0) (float-vector 172.99 120.0 -7.5) (float-vector 167.5 120.0 -12.9904) (float-vector 160.0 120.0 -15.0) (float-vector 152.5 120.0 -12.9904) (float-vector 147.01 120.0 -7.5) (float-vector 145.0 120.0 1.421085e-14) (float-vector 147.01 120.0 7.5) (float-vector 152.5 120.0 12.9904) (float-vector 160.0 120.0 15.0) (float-vector 167.5 120.0 12.9904) (float-vector 172.99 120.0 7.5)))
         (instance face :init :vertices (list (float-vector 172.99 -120.0 -7.5) (float-vector 172.99 120.0 -7.5) (float-vector 175.0 120.0 0.0) (float-vector 175.0 -120.0 5.329071e-14)))
         (instance face :init :vertices (list (float-vector 167.5 -120.0 -12.9904) (float-vector 167.5 120.0 -12.9904) (float-vector 172.99 120.0 -7.5) (float-vector 172.99 -120.0 -7.5)))
         (instance face :init :vertices (list (float-vector 160.0 -120.0 -15.0) (float-vector 160.0 120.0 -15.0) (float-vector 167.5 120.0 -12.9904) (float-vector 167.5 -120.0 -12.9904)))
         (instance face :init :vertices (list (float-vector 152.5 -120.0 -12.9904) (float-vector 152.5 120.0 -12.9904) (float-vector 160.0 120.0 -15.0) (float-vector 160.0 -120.0 -15.0)))
         (instance face :init :vertices (list (float-vector 147.01 -120.0 -7.5) (float-vector 147.01 120.0 -7.5) (float-vector 152.5 120.0 -12.9904) (float-vector 152.5 -120.0 -12.9904)))
         (instance face :init :vertices (list (float-vector 145.0 -120.0 6.750156e-14) (float-vector 145.0 120.0 1.421085e-14) (float-vector 147.01 120.0 -7.5) (float-vector 147.01 -120.0 -7.5)))
         (instance face :init :vertices (list (float-vector 147.01 -120.0 7.5) (float-vector 147.01 120.0 7.5) (float-vector 145.0 120.0 1.421085e-14) (float-vector 145.0 -120.0 6.750156e-14)))
         (instance face :init :vertices (list (float-vector 152.5 -120.0 12.9904) (float-vector 152.5 120.0 12.9904) (float-vector 147.01 120.0 7.5) (float-vector 147.01 -120.0 7.5)))
         (instance face :init :vertices (list (float-vector 160.0 -120.0 15.0) (float-vector 160.0 120.0 15.0) (float-vector 152.5 120.0 12.9904) (float-vector 152.5 -120.0 12.9904)))
         (instance face :init :vertices (list (float-vector 167.5 -120.0 12.9904) (float-vector 167.5 120.0 12.9904) (float-vector 160.0 120.0 15.0) (float-vector 160.0 -120.0 15.0)))
         (instance face :init :vertices (list (float-vector 172.99 -120.0 7.5) (float-vector 172.99 120.0 7.5) (float-vector 167.5 120.0 12.9904) (float-vector 167.5 -120.0 12.9904)))
         (instance face :init :vertices (list (float-vector 175.0 -120.0 5.329071e-14) (float-vector 175.0 120.0 0.0) (float-vector 172.99 120.0 7.5) (float-vector 172.99 -120.0 7.5)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :white)
     (send (elt bc 2) :set-color :white)
     (send (elt bc 3) :set-color :white)
     (send (elt bc 4) :set-color :white)
     (send (elt bc 5) :set-color :white)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :beego-bodyset9 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))
  (:cameras (&rest args)
   (forward-message-to-all (list) args))

  (:handle () (list ))
  (:attention () (list ))
  (:button () (list ))
  )

(defun beego (&rest args) (instance* beego-object :init args))
;; (format *error-output* "(instance beego-object :init) for generating model~%")
