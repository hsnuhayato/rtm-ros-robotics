Index: idl/CMakeLists.txt
===================================================================
--- idl/CMakeLists.txt	(revision 0)
+++ idl/CMakeLists.txt	(revision 0)
@@ -25,6 +25,9 @@
   ServoControllerService.idl
   )
 
+set(EXTRA_IDL_FILES "" CACHE PATH "files of extra idls")
+set(idl_files ${idl_files} ${EXTRA_IDL_FILES})
+
 set(openhrp_idl_files
   ClockGenerator.idl
   CollisionDetector.idl
@@ -45,7 +48,11 @@
 configure_file(${PROJECT_SOURCE_DIR}/cpack_modules/postinst.in ${PROJECT_BINARY_DIR}/postinst)
 
 macro(generate_cpp_stub idl_basename)
-  set(idl_file ${CMAKE_CURRENT_SOURCE_DIR}/${idl_basename}.idl)
+  if ("${ARGV1}" STREQUAL "")
+    set(idl_file ${CMAKE_CURRENT_SOURCE_DIR}/${idl_basename}.idl)
+  else ("${ARGV1}" STREQUAL "")
+    set(idl_file ${ARGV1}/${idl_basename}.idl)
+  endif ("${ARGV1}" STREQUAL "")
   add_custom_command(
     OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${idl_basename}.hh ${CMAKE_CURRENT_BINARY_DIR}/${idl_basename}Sk.cpp ${CMAKE_CURRENT_BINARY_DIR}/${idl_basename}DynSk.cpp
     COMMAND omniidl ${idl_flags} ${idl_file}
@@ -54,7 +61,11 @@
 endmacro()
 
 macro(generate_java_stub idl_basename)
-  set(idl_file ${CMAKE_CURRENT_SOURCE_DIR}/${idl_basename}.idl)
+  if ("${ARGV1}" STREQUAL "")
+    set(idl_file ${CMAKE_CURRENT_SOURCE_DIR}/${idl_basename}.idl)
+  else ("${ARGV1}" STREQUAL "")
+    set(idl_file ${ARGV1}/${idl_basename}.idl)
+  endif ("${ARGV1}" STREQUAL "")
   add_custom_command(
     OUTPUT ${idl_basename}.compiled src
     COMMAND ${IDLJ} ${idlj_flags} -I${OPENRTM_IDL_DIR} ${idl_file}
@@ -65,11 +76,12 @@
 
 foreach(idl_file ${idl_files})
   get_filename_component(idl_basename ${idl_file} NAME_WE)
-  generate_cpp_stub(${idl_basename})
+  get_filename_component(idl_dirname ${idl_file} PATH)
+  generate_cpp_stub(${idl_basename} ${idl_dirname})
   list(APPEND sources ${idl_basename}Sk.cpp ${idl_basename}DynSk.cpp)
   list(APPEND headers ${CMAKE_CURRENT_BINARY_DIR}/${idl_basename}.hh)
   if(COMPILE_JAVA_STUFF)
-    generate_java_stub(${idl_basename})
+    generate_java_stub(${idl_basename} ${idl_dirname})
   endif()
   list(APPEND compiled ${idl_basename}.compiled)
 endforeach()
