#summary RTMでの画像処理サンプル

== 概要 ==

ハローワールド通信サンプルより一歩進んだサンプルとして，RTMにおける画像処理プログラムの書き方について紹介する．


== 準備 ==

USBカメラのキャプチャとその表示が行うプログラムを用意して，動作確認を行う．

=== Windowsの場合 ===

C++版に付属のサンプルコンポーネントを使う．キャプチャは，スタートメニューから，OpenRTM-aist　→ C++ → components → examples → USBCameraAqcuireComp.exe で起動する．一方，その表示は，スタートメニューから辿れる，OpenRTM-aist　→ C++ → components → examples → USBCameraMonitorComp.exe　を利用する．

ネームサーバ起動後，両方のコンポーネントを起動，RT System Editorにてデータポート接続，Activateを行って，カメラ画像がキャプチャできることを確認する．

尚，このサンプルは，OpenCV1.0用なので注意すること．OpenCV1.0に関しては，インストーラがOpenRTM-aistの公式ページに置いてあるので，それを利用する．

http://www.openrtm.org/openrtm/ja/node/849#toc10

また，同じくOpenCV1.0を用いたサンプルの画像処理プログラムを[http://rtm-ros-robotics.googlecode.com/svn/wiki/Flip100_Win.zip]に置いたので，それをダウンロードして，利用してほしい．

=== Ubuntuの場合 ===

付属のサンプルコンポーネントにUSBのキャプチャ・表示を行うコンポーネントがないためこちらで新たに用意した．[http://rtm-ros-robotics.googlecode.com/svn/wiki/UsbCameraAcquire_Ubuntu.tar.gz]がキャプチャプログラム，[http://rtm-ros-robotics.googlecode.com/svn/wiki/UsbCameraMonitor_Ubuntu.tar.gz]が表示プログラム，[http://rtm-ros-robotics.googlecode.com/svn/wiki/Flip_Ubuntu.tar.gz]が画像処理サンプルプログラムである．

tar.gzを解凍し，それぞれmakeすることで，表示とキャプチャの動作確認を行う．

表示側は以下．

{{{
 $ tar xvzf UsbCameraAcquire_Ubuntu.tar.gz
 $ cd UsbCameraAcquire
 $ make
 $ ./build/bin/UsbCameraAcquireComp
}}}

モニタ側も同様に行う．
{{{
 $ tar xvzf UsbCameraMonitor_Ubuntu.tar.gz
 $ cd UsbCameraMonitor
 $ make
 $ ./build/bin/UsbCameraMonitorComp
}}}

RTSystemEditorにて接続・動作確認を行う．

表示されない場合は適切なカメラドライバが入っていない可能性がある．少なくともxawtvなどで表示されない場合は，このコンポーネントも動作しないので，注意する必要がある．

test2