#summary rtmeus/roseus相互接続

== 概要 ==

RTMとROSを接続する方法として，ロボット用Lisp開発環境であるEusLispを介して行う方法がある．RTM, ROSそれぞれへのインタフェースであるrtmeusとroseusを接続するサンプルについて解説する．

== 準備 ==

=== rtmeusのインストール ===

http://code.google.com/p/rtmeus/ に公開されているので，それをインストールする．

{{{
$ cd ~/prog/
$ svn checkout http://rtmeus.googlecode.com/svn/trunk/ rtmeus
}}}
で~prog/rtmeusがチェックアウトされる．細かい情報はrtmeus/README_ja.jp.txtに書いてあるが，必要な作業を抜粋して以下に書く．

まずは必要なライブラリをインストールする．
{{{
$ sudo apt-get install gcc g++ git-core libboost-all-dev
$ sudo apt-get install libcv4 libhighgui4 libcvaux4 libcv-dev libcvaux-dev libhighgui-dev
}}}

次に，EusLispがインストールされていない環境では，http://sourceforge.net/apps/mediawiki/jskeus/
を参照してインストールする．この講義用にROSをインストールした環境では，EusLispは既にインストールされている．

{{{
$ roseus euslisp irteusgl
}}}

が正しく実行されれば良い．

次に，rtmeusは，
  *OpenRTM-aist-1.0.0-Relase C++版
  *rtcshell
  *rtctree
  *RTMExt
  *OpenRTM-aist-1.0.0-Relase Python版

に依存するが，rtmeus/tools/setup-official_all.shを用いれば，これらが全てインストールされる．OpenRTM-aist-1.0.0-Relase C++版が既にインストールされた環境では，

{{{
$ cd ~/prog/rtmeus/tools/
$ ./setup-official_all.sh --no-rtm-install
}}}

とすれば良い．このスクリプトを実行すると，$HOME以下に.bashrc.rtmが生成されるので，.bashrcの中に

{{{
source .bashrc.rtm
}}}

の１行を追加する．そして，これを追加した後に，以下のようにコンパイルする．

{{{
$ source ~/.bashrc
$ cd ~/prog/rtmeus/src/common
$ make
}}}

== rtmeus:EusLispからのRTMインタフェース ==

== サンプル ==