#summary ROSの主なコマンド

<wiki:toc max_depth="2" />

= 概要 =
[ROS_Install  ROSのインストール]が終わっていることを前提とさせていただきます。
ROSの主なコマンドの紹介です。
詳しくは、ROSのページを参考に見に行ってください。
おそらく、ここで紹介するのは、とりあえずどんなコマンドがあるかを知るため
程度と思ってください。

= なぜ特別にros用のコマンドがあるのか =
パッケージごとに扱うことが多いrosでは、どこのディレクトリにいてもパッケージにアクセスすることを容易にするためにさまざまな便利なros用のコマンドがあります。パッケージ名を知っていれば、引数にパッケージの名前を与えるだけで、そのパッケージの場所に移動したり、移動せずにその中のパッケージの中をみたり編集したりすることができます。今は、おそらくありがたみがわからないと思いますが、使うとかなり便利です。

= コマンドのテーブルでの概略機能紹介 =
なるべくよく使うであろう順番に並べてあります。まだROSの習いはじめで、
どんなコマンドがあるのかもわからないときに参照してください。
||[#roscd roscd] || ディレクトリを移動する||
||[#rosls rosls] || ディレクトリの中を表示する||
||[#rosmake rosmake]|| makeを依存関係を含めmakeを行ってくれる||
||[#rosws rosws]|| パッケージのアップデートなどを行う||
||[#roscore roscore]|| rosのOSのような機能を起動する||
||[#rosrun rosrun]|| プログラムを実行する||
||[#roslaunch roslaunch]|| launchファイルを実行する(複数のrosrunを一気に行うようなもの)||
||[#rostopic rostopic]|| topicに関する情報を得る||
||[#rospack rospack]|| packageに関する情報を得る||
||[#roscreate-pkg roscreate-pkg]||　新たにパッケージを作る||
||[#rosmsg rosmsg]|| メッセージに関する情報を得る||
||[#roslocate roslocate]|| パッケージのインストールに関する情報等を得る||
||[#roscp roscp]|| コピーをする||
||[#rosnode rosnode]|| ノードに関する情報を得る||
||[#rosed rosed]|| viかemacsのエディタをコマンドに開く||

= 大まかなコマンド紹介 =
あくまでここでも概略しか紹介していません。
それぞれの詳しい情報は本来のROSのページを参照しにいってください。
-----
-----
==roscd==
[http://www.ros.org/wiki/ROS/Tutorials/NavigatingTheFilesystem ROSのroscd]を詳しくは参照してください。

ディレクトリを移動するコマンドです。

引数はパッケージ名を指定すればよく、もしその下の階層のディレクトリに移動したい場合は、さらに、そのフォルダの名前を指定してください。
===主に使う形===
{{{
    roscd パッケージ名
ex) roscd roseus_tutorials/bin
}}}
のように使います。パッケージはROS_PACKAGE_PATHにパスが通ってなくてはなりません。

===参考===
{{{
roscd
}}}
のみ打った場合は、workSpaceのディレクトリに戻ります。workSpaceのディレクトリは環境変数で以下の様に設定されているのが確認できます。一行目を打ってください。
{{{
$env | grep ROS
ROS_WORKSPACE=/home/mechuser/ros/fuerte
}}}
-----
-----
==rosls==
[http://www.ros.org/wiki/ROS/Tutorials/NavigatingTheFilesystem ROSのrosls]を詳しくは参照してください。

ディレクトリの中のものを表示するコマンドです。通常のlsと同じような機能です。

引数はパッケージ名をしてすればよく、もしその下の階層のディレクトリを表示したい場合は、さらに、そのフォルダの名前を指定してください。

ディレクトリを移動しないでも中を見れるのが強みです。
===主に使う形===
{{{
    rosls パッケージ名
ex) rosls roseus_tutorials/build
}}}
のように使います。パッケージはROS_PACKAGE_PATHにパスが通ってなくてはなりません。

===参考===
{{{
rosls -latr
rosls
}}}
通常通りのオプションをつけることもできますし、何も引数を与えない場合はlsと同じくカレントディレクトリの内容を表示します。
-----
-----
==rosmake==
[http://www.ros.org/wiki/rosmake ROSのrosmake]を詳しくは参照してください。

パッケージのmakeを依存関係などを含めてすべて行ってくれる便利なコマンドです。かなりmakeには時間がかかると思いますので、辛抱強く待ってみてください。

makeに新たに加えたいものがある場合は、CMakeLists.txtの中を変更しなくてはなりません。
===主に使う形===
{{{
    rosmake パッケージ名
ex) rosmake roseus_tutorials
}}}
===参考===
あるパッケージAのプログラムを実行したときに、他のパッケージBの文句が言われた場合には、パッケージBが古いか、makeされてないことが多々あると思います。そしたら、以下の様に行って見てください
{{{
//パッケージがsvnで押されている場合
$svn up
$rosmake パッケージB
}}}
-----
-----
==rosws==
[http://www.ros.org/wiki/rosws ROSのrosws]を詳しくは参照してください。
===主に使う形===
===参考===
-----
-----
==roscore==
[http://www.ros.org/wiki/roscore ROSのroscore]を詳しくは参照してください。

rosの起動のような機能にあたるようなもので、ほかのどのnodeを立てるときも必ずまず、roscoreはどこかのターミナルでひとつだけ開いといてください。逆に複数は開けず一つしか開けないようになっています。実際はこれによって、masterとrosoutとparameterServerが走り始めます。

実機ではなく自分のパソコンで、シュミレーションなどを行う際に、必ず起動しておいてください。
===主に使う形===
{{{
roscore
}}}


-----
-----
==rosrun==
[http://www.ros.org/wiki/rosrun ROSのrosrun]を詳しくは参照してください。
===主に使う形===
===参考===
-----
-----
==roslaunch==
[http://ros.org/wiki/roslaunch ROSのroslaunch]を詳しくは参照してください。
===主に使う形===
===参考===
-----
-----
==rostopic==
[http://www.ros.org/wiki/rostopic ROSのrostopic]を詳しくは参照してください。
===主に使う形===
===参考===
-----
-----
==rospack==
[http://www.ros.org/wiki/rospack ROSのrospack]を詳しくは参照してください。
===主に使う形===
===参考===
-----
-----
==roscreate-pkg==
[http://www.ros.org/wiki/roscreate ROSのroscreate-pkg]を詳しくは参照してください。
===主に使う形===
===参考===
-----
-----
==rosmsg==
[http://www.ros.org/wiki/rosmsg ROSのrosmsg]を詳しくは参照してください。
===主に使う形===
===参考===
-----
-----
==roslocate==
[http://www.ros.org/wiki/roslocate ROSのroslocate]を詳しくは参照してください。
===主に使う形===
===参考===
-----
-----
==roscp==
[http://www.ros.org/wiki/ROS/Tutorials/CreatingMsgAndSrv ROSのroscp]を詳しくは参照してください。
===主に使う形===
===参考===
-----
-----
==rosnode==
[http://www.ros.org/wiki/rosnode ROSのrosnode]を詳しくは参照してください。
===主に使う形===
===参考===
-----
-----
==rosed==
[http://www.ros.org/wiki/ROS/Tutorials/UsingRosEd ROSのrosed]を詳しくは参照してください。
===主に使う形===
===参考===



= ROS_PACKAGE_PATHについて =
{{{
//コマンドのcdと同じく、指定されたディレクトリに移るコマンド
roscd パッケージ名
//コマンドのlsと同じく、指定されたディレクトリ内を表示するコマンド
rosls パッケージ名
}}}
上のrosのコマンドなどと同じように、
用意されているrosのそのほかのコマンドもさまざまなディレクトリに入っているパッケージ名を引数にすることがほとんどです。

これらのパッケージが、さまざまなディレクトリにあるにもかかわらず、rosのコマンドがそれぞれのパッケージのあるディレクトリを知っているのは、もちろんパスを環境変数として通してあるからです。
{{{
env | grep ROS
}}}
と打ってみてください。ご存知とは思いますが、envは環境変数を表示し、その中でROSの文字列を含むものをgrepで絞り込んで表示させています。

その中に、
{{{
ROS_PACKAGE_PATH
}}}
があると思います。これに、それらのパッケージがあるとされるディレクトリのパスを書いていきます。
{{{
user@ubuntu:~/ros/fuerte/jsk-ros-pkg$ ls
・・・
elevator_move_base_pr2   jsk.rosbuild         pr2eus_tutorials
euscollada               jsk.rosbuild~        pr2pose
euslisp                  jsk.rosinstall       roseus
jsk_common               jsk_semantic_maps    roseus_tutorials//←パッケージ名
・・・
}}}
たとえば、おそらくよく使うパッケージのひとつとして、roseus_tutorialsがあるとおもいますが、これをroscdなどでパッケージとして認識してもらって使えるようにするには、これの親のディレクトリであるjsk-ros-pkgをROS_PACKAGE_PATHに登録しなくてはなりません。おそらく、さきほどのROS_PACKAGE_PATHにjsk-ros-pkgの文字も見られると思います。このroseus_tutorialsはすでに登録されているので、
{{{
roscd roseus_tu
}}}
ぐらいまで打って、TABキーを押せば自動に補完されて、実行をすると
{{{
~/ros/fuerte/jsk-ros-pkg/roseus_tutorials
}}}
などのように用意に目的のディレクトリに移動することができます。