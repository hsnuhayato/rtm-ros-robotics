# Python stubs generated by omniidl from VideoStreamService.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "_GlobalIDL"
#
__name__ = "_GlobalIDL"
_0__GlobalIDL = omniORB.openModule("_GlobalIDL", r"VideoStreamService.idl")
_0__GlobalIDL__POA = omniORB.openModule("_GlobalIDL__POA", r"VideoStreamService.idl")

# #include "BasicDataType.idl"
import BasicDataType_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")
# #include "ExtendedDataTypes.idl"
import ExtendedDataTypes_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")
# #include "InterfaceDataTypes.idl"
import InterfaceDataTypes_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")

# interface VideoStreamService
_0__GlobalIDL._d_VideoStreamService = (omniORB.tcInternal.tv_objref, "IDL:VideoStreamService:1.0", "VideoStreamService")
omniORB.typeMapping["IDL:VideoStreamService:1.0"] = _0__GlobalIDL._d_VideoStreamService
_0__GlobalIDL.VideoStreamService = omniORB.newEmptyClass()
class VideoStreamService :
    _NP_RepositoryId = _0__GlobalIDL._d_VideoStreamService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0__GlobalIDL.VideoStreamService = VideoStreamService
_0__GlobalIDL._tc_VideoStreamService = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_VideoStreamService)
omniORB.registerType(VideoStreamService._NP_RepositoryId, _0__GlobalIDL._d_VideoStreamService, _0__GlobalIDL._tc_VideoStreamService)

# VideoStreamService operations and attributes
VideoStreamService._d_capture = ((omniORB.tcInternal.tv_long, ), (), None)

# VideoStreamService object reference
class _objref_VideoStreamService (CORBA.Object):
    _NP_RepositoryId = VideoStreamService._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def capture(self, *args):
        return _omnipy.invoke(self, "capture", _0__GlobalIDL.VideoStreamService._d_capture, args)

    __methods__ = ["capture"] + CORBA.Object.__methods__

omniORB.registerObjref(VideoStreamService._NP_RepositoryId, _objref_VideoStreamService)
_0__GlobalIDL._objref_VideoStreamService = _objref_VideoStreamService
del VideoStreamService, _objref_VideoStreamService

# VideoStreamService skeleton
__name__ = "_GlobalIDL__POA"
class VideoStreamService (PortableServer.Servant):
    _NP_RepositoryId = _0__GlobalIDL.VideoStreamService._NP_RepositoryId


    _omni_op_d = {"capture": _0__GlobalIDL.VideoStreamService._d_capture}

VideoStreamService._omni_skeleton = VideoStreamService
_0__GlobalIDL__POA.VideoStreamService = VideoStreamService
omniORB.registerSkeleton(VideoStreamService._NP_RepositoryId, VideoStreamService)
del VideoStreamService
__name__ = "_GlobalIDL"

#
# End of module "_GlobalIDL"
#
__name__ = "VideoStreamService_idl"

_exported_modules = ( "_GlobalIDL", )

# The end.
