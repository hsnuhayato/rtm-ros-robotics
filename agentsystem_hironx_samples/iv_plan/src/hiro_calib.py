##
## hiro_calib.py
##
## R.Hanai 2011.03.11 -
##

import time
from numpy import *

import roslib; roslib.load_manifest('MotionPlan')
from tf.transformations import *

from set_env import *
from geo import *
import visual
import viewer

# poses = [
#     [0.0, -0.81997409035639068, 0.9999899464722336, -0.037952184584616695, -0.053960593816658971, -2.0305335050627229, 0.29687593949584362, 0.48555605205873498, 0.4426083952215969, 0.010428342280666119, 7.4799825085471266e-06, -1.7453292519943295, -0.26523169954035342, 0.16403367891790457, -0.05584546243227205, -0.40317110618087248, 0.066322512924671173, -0.017453269162450269, -0.012217304669320583, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
#     [0.0, -0.93999274720056325, 1.0199902020285174, -0.35672784581512101, -0.18969235641675514, -1.6290379639339474, 0.24810819307093229, 0.15061646029319817, 0.66765693291370876, 0.010428342280666119, 7.4799825085471266e-06, -1.7453205253480695, -0.26523169954035342, 0.16405413199507637, -0.05584546243227205, 0.65449847380188508, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
#     [0.0, -0.96999741141160634, 0.87998841313453047, -0.53150511710983317, -0.87046800446715478, -0.64427084008118685, 0.22940932400632444, -0.18552986302547536, 0.76519242576353141, 0.010428342280666119, 0.0, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.65449847380188508, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
#     [0.0, -0.77999855102409077, 0.91998892424709822, -0.27720191844799941, -0.73781051467807146, -0.77709039615795528, 0.25374753453486165, -0.12429334997308056, 0.51582850888484155, 0.010428342280666119, 0.0, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.65449847380188508, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
#     [0.0, -0.3999701506333021, 0.949989307581524, 0.12769701472216513, -0.67581641964723282, -0.6959500392327389, 0.26290290266051214, -0.15855225423585986, 0.086873256154863104, 0.010428342280666119, 0.0, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.65100778738525911, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.013962633907794952],
#     [0.0, 0.049977094069314186, 0.9999899464722336, 0.57686622436916579, -0.76385581377283251, -0.40453241402724571, 0.27854237190258341, -0.36044457899878207, 0.052671905899939336, 0.29999591847904533, 7.4799825085471266e-06, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.055822631090312824, 0.65100778738525911, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
#     [0.0, 0.0, 1.2799935242602076, 0.92577499513535222, 0.11866244251559162, -1.579601512871208, 0.23447788192127308, 0.0074040139361946948, -0.20392954637982583, 0.29999591847904533, 0.0, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.65100778738525911, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
#     [0.0, -0.41994258049157313, 1.1199914798099369, 0.30284953180605606, -0.036135795498791166, -1.4607445908103942, 0.2597978401540571, -0.11427134215889437, 0.4064663809001387, 0.29999591847904533, 0.0, -1.7453205253480695, -0.26523169954035342, 0.16399277276356095, -0.055822631090312824, 0.65100778738525911, -0.25307273864746094, -0.45204027096298738, 0.30019661784172058, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
#     [0.0, -0.14999264143945798, 1.0999912242536529, 0.48174578013547481, -0.37640019981259998, -0.91095714978592035, 0.27185278870852958, -0.27030786790262179, 0.17739952702320272, 0.29999591847904533, 0.0, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.65100778738525911, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
#     [0.0, -0.49998569800344589, 1.079990968697369, 0.20033761819016913, -0.15942086720466492, -1.3375505255583744, 0.25472928223910846, -0.14026720324426303, 0.50617085123608807, 0.29998719183278538, 0.0, -1.7453292519943295, -0.26523169954035342, 0.16397231968638915, -0.05584546243227205, 0.64926250378159089, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583]
#     ]

# poses = [
#     [0.0, -0.81997409035639068, 0.9999899464722336, -0.037952184584616695, -0.053960593816658971, -2.0305335050627229, 0.29687593949584362, 0.48555605205873498, 0.4426083952215969, 0.010428342280666119, 7.4799825085471266e-06, -1.7453292519943295, -0.26523169954035342, 0.16403367891790457, -0.05584546243227205, -0.40317110618087248, 0.066322512924671173, -0.017453269162450269, -0.012217304669320583, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
#     [0.0, -0.93999274720056325, 1.0199902020285174, -0.35672784581512101, -0.18969235641675514, -1.6290379639339474, 0.24810819307093229, 0.15061646029319817, 0.66765693291370876, 0.010428342280666119, 7.4799825085471266e-06, -1.7453205253480695, -0.26523169954035342, 0.16405413199507637, -0.05584546243227205, 0.65449847380188508, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
#     [0.0, -0.96999741141160634, 0.87998841313453047, -0.53150511710983317, -0.87046800446715478, -0.64427084008118685, 0.22940932400632444, -0.18552986302547536, 0.76519242576353141, 0.010428342280666119, 0.0, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.65449847380188508, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
#     [0.0, -0.77999855102409077, 0.91998892424709822, -0.27720191844799941, -0.73781051467807146, -0.77709039615795528, 0.25374753453486165, -0.12429334997308056, 0.51582850888484155, 0.010428342280666119, 0.0, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.65449847380188508, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
#     [0.0, -0.3999701506333021, 0.949989307581524, 0.12769701472216513, -0.67581641964723282, -0.6959500392327389, 0.26290290266051214, -0.15855225423585986, 0.086873256154863104, 0.010428342280666119, 0.0, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.65100778738525911, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.013962633907794952],
#     [0.0, 0.049977094069314186, 0.9999899464722336, 0.57686622436916579, -0.76385581377283251, -0.40453241402724571, 0.27854237190258341, -0.36044457899878207, 0.052671905899939336, 0.29999591847904533, 7.4799825085471266e-06, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.055822631090312824, 0.65100778738525911, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
#     [0.0, 0.0, 1.2799935242602076, 0.92577499513535222, 0.11866244251559162, -1.579601512871208, 0.23447788192127308, 0.0074040139361946948, -0.20392954637982583, 0.29999591847904533, 0.0, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.65100778738525911, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
#     [0.0, -0.41994258049157313, 1.1199914798099369, 0.30284953180605606, -0.036135795498791166, -1.4607445908103942, 0.2597978401540571, -0.11427134215889437, 0.4064663809001387, 0.29999591847904533, 0.0, -1.7453205253480695, -0.26523169954035342, 0.16399277276356095, -0.055822631090312824, 0.65100778738525911, -0.25307273864746094, -0.45204027096298738, 0.30019661784172058, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
#     [0.0, -0.14999264143945798, 1.0999912242536529, 0.48174578013547481, -0.37640019981259998, -0.91095714978592035, 0.27185278870852958, -0.27030786790262179, 0.17739952702320272, 0.29999591847904533, 0.0, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.65100778738525911, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
#     [0.0, -0.49998569800344589, 1.079990968697369, 0.20033761819016913, -0.15942086720466492, -1.3375505255583744, 0.25472928223910846, -0.14026720324426303, 0.50617085123608807, 0.29998719183278538, 0.0, -1.7453292519943295, -0.26523169954035342, 0.16397231968638915, -0.05584546243227205, 0.64926250378159089, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],

#     [0.0, -0.63994610509013183, 0.74998675201868548, 0.089526663981049137, -0.6499955200277282, -1.4453158802227641, 0.26520886819839418, -0.23594669825398343, 0.05584546243227205, 0.010419615634406148, 0.0, -1.7452856187630297, -0.26523169954035342, 0.16405413199507637, -0.05584546243227205, 0.00698132912186189, -0.013962633907794952, -0.017453269162450269, 0.0069813169538974762, 0.013962582745824292, -0.015707964077591896, -0.010472015538487867, 0.001745329238474369],
#     [0.0, -0.69998611312797576, 0.7699870075749693, 0.18953403012032422, -0.49999195080132414, -1.7453292519943295, -0.13470491755944608, -0.235885339022468, 0.05584546243227205, 0.010428342280666119, 0.0, -1.7453117987018096, -0.26523169954035342, 0.16405413199507637, -0.05584546243227205, 0.015707925954137281, -0.013962633907794952, -0.013962582745824292, 0.013962633907794952, 0.013962582745824292, -0.015707964077591896, -0.012217358746800855, 0.001745329238474369],
#     [0.0, -0.34999305656398788, 0.87998841313453047, 0.18953403012032422, -0.69999920309736574, -0.84532404326467359, 0.46521142376123276, 0.16405413199507637, 0.05584546243227205, 0.010428342280666119, 0.0, -1.7453117987018096, -0.26523169954035342, 0.16403367891790457, -0.055868293774231276, 0.017453269162450269, -0.013962633907794952, -0.013962582745824292, 0.013962633907794952, 0.013962582745824292, -0.015707964077591896, -0.012217358746800855, 0.001745329238474369],
#     [0.0, -0.89998652825250569, 0.83998790202196283, -0.51045644633078158, -0.69997676314984014, -1.0453125956044438, 0.86514804086103225, -0.43593688683992743, 0.05584546243227205, 0.010428342280666119, 0.0, -1.7453117987018096, -0.26523169954035342, 0.16403367891790457, -0.05584546243227205, 0.00698132912186189, -0.015707964077591896, -0.015707925954137281, 0.013962633907794952, 0.013962582745824292, -0.015707964077591896, -0.012217358746800855, 0.001745329238474369],

#     [0.0, -1.0999869433770355, 0.79998739090939508, -0.33793937641740207, -0.3539602522869586, -2.0305335050627229, 0.89686077484240012, -0.11437360754475341, 0.4426083952215969, 0.010428342280666119, 7.4799825085471266e-06, -1.7453292519943295, -0.26523169954035342, 0.16403367891790457, -0.05584546243227205, 0.61959190765884919, -0.44505897164344788, -0.29496069351700349, 0.42760565876960754, 0.26179941097763582, -0.38397243618965149, -0.31764991680649324, -0.012217304669320583],
#     [0.0, -1.2499795848164936, 0.45998304645256949, -0.43790310932537729, -0.95395208924504926, -2.0305335050627229, 1.096680679669565, -0.11437360754475341, 0.44258556387963766, 0.010428342280666119, 7.4799825085471266e-06, -1.7453292519943295, -0.26523169954035342, 0.16403367891790457, -0.055822631090312824, 0.61959190765884919, -0.44331362843513489, -0.29496069351700349, 0.42760565876960754, 0.26179941097763582, -0.38571777939796448, -0.31764991680649324, -0.013962633907794952],
#     [0.0, -1.2499795848164936, 0.45996021511061025, -0.43790310932537729, -0.95395208924504926, -2.0305247784164631, 1.096680679669565, 0.58561250558322242, 0.44258556387963766, 0.01043706892692609, 7.4799825085471266e-06, -1.7453292519943295, -0.26523169954035342, 0.16403367891790457, -0.055822631090312824, 0.61959190765884919, -0.44331362843513489, -0.29496069351700349, 0.42760565876960754, 0.26179941097763582, -0.38571777939796448, -0.31939526001480623, -0.013962633907794952],
#     [0.0, -1.2499795848164936, 0.45993738376865101, -0.43790310932537729, -0.95395208924504926, -2.0305335050627229, 1.8912342111926637, 0.58561250558322242, 0.44258556387963766, 0.010410888988146176, 1.4959965017094253e-05, -1.7453292519943295, -0.26523169954035342, 0.16403367891790457, -0.055799799748353592, 0.61959190765884919, -0.44505897164344788, -0.29496069351700349, 0.42760565876960754, 0.26179941097763582, -0.38571777939796448, -0.31939526001480623, -0.013962633907794952],
#     ]

poses = [
    [0.0, -0.49998569800344589, 0.8999886686908144, -0.037943457938356726, -0.45396013844372513, -1.4305329414583723, 0.29687593949584362, 0.085514315655331546, 0.64254245675855781, 0.010428342280666119, 1.4959965017094253e-05, -1.7453292519943295, -0.26523169954035342, 0.16405413199507637, -0.05584546243227205, 0.0087266723301748783, 0.052359879016876221, -0.033161238827977613, 0.0, 0.038397268452916578, -0.0069813169538974762, -0.013962582745824292, -0.013962633907794952],
    [0.0, -0.93999274720056325, 1.0199902020285174, -0.35672784581512101, -0.18969235641675514, -1.6290379639339474, 0.24810819307093229, 0.15061646029319817, 0.66765693291370876, 0.010428342280666119, 7.4799825085471266e-06, -1.7453205253480695, -0.26523169954035342, 0.16405413199507637, -0.05584546243227205, 0.65449847380188508, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
    [0.0, -0.96999741141160634, 0.87998841313453047, -0.53150511710983317, -0.87046800446715478, -0.64427084008118685, 0.22940932400632444, -0.18552986302547536, 0.76519242576353141, 0.010428342280666119, 0.0, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.65449847380188508, -0.25307273864746094, -0.45204027096298738, 0.30194196105003357, 0.050614551701817945, 0.010471975430846214, -0.017453269162450269, -0.012217304669320583],
    [0.0, -0.3999701506333021, 0.91998892424709822, 0.12769701472216513, -0.67580145968221583, -0.6959500392327389, 0.2628800713185529, -0.55851217833057609, 0.086850424812903879, 0.010428342280666119, -7.4799825085471266e-06, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.64053584734467073, -0.23736478388309479, -0.43807764450577302, 0.28623399138450623, 0.041887954869542554, -0.0069813169538974762, -0.017453269162450269, -0.013962633907794952],
    [0.0, 0.14999264143945798, 0.85998815757824665, 0.57686622436916579, -0.76385581377283251, -0.40453241402724571, 0.27854237190258341, -0.61038118203828251, 0.052649074557980111, 0.29999591847904533, 2.243994752564138e-05, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.055822631090312824, 0.64053584734467073, -0.23736478388309479, -0.43807764450577302, 0.28623399138450623, 0.040142611661229566, -0.0069813169538974762, -0.019198612370763257, -0.013962633907794952],
    [0.0, 0.099984867754386086, 1.1499918631443626, 0.72576898950306201, 0.11866244251559162, -1.579601512871208, 0.23443221923735463, 0.0074040139361946948, -0.20392954637982583, 0.29999591847904533, -7.4799825085471266e-06, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.64053584734467073, -0.23736478388309479, -0.43807764450577302, 0.28623399138450623, 0.041887954869542554, -0.0069813169538974762, -0.019198612370763257, -0.013962633907794952],
    [0.0, -0.24997750919384409, 1.2099926298132142, 0.30284953180605606, -0.036128315516282622, -1.4607445908103942, 0.25982067149601634, -0.11427134215889437, 0.80642582934189744, 0.29999591847904533, 0.0, -1.7453117987018096, -0.26518603685643494, 0.16399277276356095, -0.055822631090312824, 0.64053584734467073, -0.23736478388309479, -0.43633230129746003, 0.28623399138450623, 0.041887954869542554, -0.0069813169538974762, -0.017453269162450269, -0.013962633907794952],
    [0.0, -0.19993905589301447, 1.1299687762461195, 0.30284953180605606, -0.036128315516282622, -1.4607445908103942, 0.45973190169101796, -0.61424681362375433, 0.80638016665797896, 0.29999591847904533, 7.4799825085471266e-06, -1.7453117987018096, -0.26520886819839418, 0.16399277276356095, -0.055822631090312824, 0.64053584734467073, -0.23736478388309479, -0.44331367413071199, 0.28623399138450623, 0.040142611661229566, -0.0069813169538974762, -0.019198612370763257, -0.013962633907794952],
    [0.0, -0.41997326010733083, 0.9999899464722336, 0.20033761819016913, -0.15942086720466492, -1.3375505255583744, -0.44525683088886736, -0.44025248612317902, 0.50617085123608807, 0.29998719183278538, 0.0, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.64053584734467073, -0.23736478388309479, -0.43633230129746003, 0.28623399138450623, 0.040142611661229566, -0.0069813169538974762, -0.019198612370763257, -0.013962633907794952],
    [0.0, -0.41991190087581542, 0.99996711513027436, 0.20033761819016913, -0.15942086720466492, -1.3375505255583744, -0.14525299754460946, -0.44025248612317902, 0.0062101250129100562, 0.29998719183278538, 0.0, -1.7453292519943295, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.64053584734467073, -0.23736478388309479, -0.43633230129746003, 0.28623399138450623, 0.040142611661229566, -0.0069813169538974762, -0.019198612370763257, -0.013962633907794952],

    [0.0, -0.44994724470261627, 0.74998675201868548, -0.010428342280666119, -0.8999914954283903, -0.69531299405576097, 0.0, -0.58591930174079954, -0.044132984007188007, 0.010419615634406148, 7.4799825085471266e-06, -1.7453117987018096, -0.26523169954035342, 0.16403367891790457, -0.05584546243227205, 0.35430188576248689, -1.3718287944793701, -0.13962634007004304, 1.1815879344940186, 0.054105238118443921, -1.0454522371292114, -0.23736472527054353, 0.85521131753921509],
    [0.0, -0.44994724470261627, 0.74998675201868548, -0.010428342280666119, -0.8999914954283903, -0.69531299405576097, 1.1000140555956122, -0.58593975481797134, 0.05584546243227205, 0.010419615634406148, 7.4799825085471266e-06, -1.7453117987018096, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.022689298787389234, -0.019198622554540634, -0.031415895619664624, 0.01745329238474369, 0.041887954869542554, -0.0069813169538974762, -0.019198612370763257, -0.013962633907794952],
    [0.0, -0.34999305656398788, 0.74998675201868548, -0.010428342280666119, -0.8999914954283903, -0.69531299405576097, 1.1000140555956122, -1.0359074525977594, 0.05584546243227205, 0.010419615634406148, 7.4799825085471266e-06, -1.7453117987018096, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.020943955579076245, -0.019198622554540634, -0.031415895619664624, 0.01745329238474369, 0.041887954869542554, -0.0069813169538974762, -0.019198612370763257, -0.013962633907794952],
    [0.0, -0.54999347168851775, 0.79998739090939508, -0.010428342280666119, -0.8999914954283903, -0.49528080848469086, 1.0998314048599382, -0.23574216748226534, -1.0939409186344575, 0.010428342280666119, 2.243994752564138e-05, -1.7453117987018096, -0.26523169954035342, 0.16399277276356095, -0.05584546243227205, 0.036651925244603589, -0.033161256462335587, -0.043633178868565992, 0.022689281031489372, 0.036651925244603589, -0.0069813169538974762, -0.017453269162450269, -0.013962633907794952],
    [0.0, -0.54999347168851775, 0.59998483534655644, -0.2605776573227534, -1.4154894499699326, -0.18877481189570669, 1.5167545403774034, -0.63529303003354531, -0.26753766507823545, 0.010428342280666119, 0.0, -1.7453117987018096, -0.26523169954035342, 0.16405413199507637, -0.05584546243227205, 0.022689298787389234, -0.019198622554540634, -0.033161238827977613, 0.01745329238474369, 0.041887954869542554, -0.0069813169538974762, -0.019198612370763257, -0.013962633907794952],
    [0.0, -0.54996279207276011, 0.59996200400459732, 0.23941554014232216, -0.7154827668900583, -1.2887685729651328, -0.48324818390902297, -0.63527257695637351, -0.26753766507823545, 0.010428342280666119, 7.4799825085471266e-06, -1.7453117987018096, -0.26523169954035342, 0.16405413199507637, -0.05584546243227205, 0.036651925244603589, -0.019198622554540634, -0.02617998520401521, 0.01745329238474369, 0.041887954869542554, -0.0069813169538974762, -0.019198612370763257, -0.013962633907794952],
    [0.0, -0.41997326010733083, 0.69998611312797576, 0.23941554014232216, -0.7154827668900583, -0.98877265448608753, -0.28319996566226596, -0.63523167080202991, -0.26753766507823545, 0.010428342280666119, -7.4799825085471266e-06, -1.7453117987018096, -0.26523169954035342, 0.16405413199507637, -0.05584546243227205, 0.036651925244603589, -0.019198622554540634, -0.024434641995702222, 0.01745329238474369, 0.041887954869542554, -0.0069813169538974762, -0.019198612370763257, -0.013962633907794952],
    [0.0, -0.34996237694823018, 0.79998739090939508, 0.23941554014232216, -0.7154827668900583, -0.6887505560682623, -0.58318096766456462, -0.63523167080202991, 0.082443975814772835, 0.010428342280666119, 7.4799825085471266e-06, -1.7453117987018096, -0.26523169954035342, 0.16405413199507637, -0.05584546243227205, 0.036651925244603589, -0.019198622554540634, -0.024434641995702222, 0.01745329238474369, 0.041887954869542554, -0.0069813169538974762, -0.019198612370763257, -0.013962633907794952],
    [0.0, -0.24997750919384409, 0.84998802980010468, 0.23941554014232216, -0.7154827668900583, -0.68874182942200235, -0.58318096766456462, -0.63523167080202991, 0.98245547584754644, 0.010428342280666119, 0.0, -1.7453117987018096, -0.26523169954035342, 0.16405413199507637, -0.05584546243227205, 0.036651925244603589, -0.019198622554540634, -0.02617998520401521, 0.01745329238474369, 0.041887954869542554, -0.0069813169538974762, -0.019198612370763257, -0.013962633907794952]
    ]


def gen_calib_input(r, rr, output_for_eus=True):
    for i in range(len(poses)):
        r.set_joint_angles(poses[i])
        # sync and wait
        rr.send_goal(r.get_joint_angles())
        time.sleep(9)
        #
        state = rr.get_joint_angles()
        trans = rr.get_tf()
        if trans == None:
            print 'failed to detect the checkerboard !!'
            return

        if output_for_eus:
            print ';; pose %d'%i
            print_eus(state)
            print ''
            print_eus(trans)
            print ''
        else:
            print '# pose %d'%i
            print state
            print trans




def print_eus(v):
    if type(v) == list or type(v) == tuple:
        print '(',
        for x in v:
            print_eus(x)
        print ')',
    elif type(v) == numpy.ndarray:
        dim = len(v.shape)
        if dim == 1:
            print '#f(',
            for i in range(v.shape[0]):
                print v[i],
            print ')'
        else:
            nrows,ncols = v.shape
            print '#2f('
            for i in range(nrows):
                print '(',
                for j in range(ncols):
                    print v[i][j],
                print ')'
            print ')'
    else:
        print v,

def print1(data):
    st,(pos,rot) = data
    print '(#s(coordinates plist nil rot ',
    print_eus(quaternion_matrix(rot)[0:3,0:3])
    print 'pos ',
    print_eus(1000*array(pos))
    print ')'
    st = (180.0/pi)*array(st)
    st[1] = -st[1]
    st[3] = -st[3]
    st[6] = -st[6]
    st[8] = -st[8]
    print_eus(st)
    print ')'

def print_data(data):
    print '('
    for d in data:
        print1(d)
    print ')'




from calib110304_2 import data
from scipy.optimize import leastsq

def check_calib(r, env, data, param):
    The,Two = v2frame(param)
    for js,(vec,quat) in data:
        f1 = FRAME(mat=MATRIX(mat=quaternion_matrix(quat)[0:3,0:3].tolist()),
                   vec=VECTOR(vec=(1000.0*array(vec)).tolist()))
        r.set_joint_angles(js)
        f2 = r.get_link('HEAD_JOINT1_Link').where()*The*f1
        f3 = r.get_link('RARM_JOINT5_Link').where()*Two
        env.delete_object("box")
        bx = visual.box(length=97, height=66, width=57, color=(1,0,1))
        obj = viewer.PartsObjectWithName(vbody=bx,name="box")
        env.insert_object(obj, f2, env.get_world())
        # print f2
        # print f3
        print ((-f2)*f3).xyzabc()
        raw_input()

def check_calib2(data, The, Two):
    print 'distSO3: ',
    print distSO3(fhand.mat, fboard.mat)
    print 'distRn: ',
    print distRn(fhand.vec, fboard.vec)


# parameter vector: v = [x1,y1,z1,a1,b1,c1,x2,y2,z2,a2,b2,c2]
# v0 = [20,40,100,0,pi/2,-pi/2, 20,0,-100,0,0,0] # initial guess (wrist)
# v0 = [20,40,100,0,pi/2,-pi/2, -50,50,-100,-pi/2,pi/2,0] # initial guess (hand)

v0 = [  30.00676606,   77.85344899,  109.49192548,   -0.19074336,    1.47389891,
        -1.40432817,  -41.0334018,    31.60894139, -112.34010493,   -1.37454603,
        1.54712859,   -0.28871454]

v1 = [  30.17305702,   76.77661847,  106.89223498,   -0.19921564,    1.46953315,
        -1.39411838,  -40.97999145,   31.67083426, -112.31912877,   -1.24781706,
        1.50730543,   -0.45214408]

v2 = [  30.48815715,   75.39493872,  103.37041871,   -0.20836833,    1.46363548,
        -1.38242171,  -40.84726587,   31.64212385, -112.21801876,   -0.9923657,
        1.53189134,   -0.66862079]

v3 = [  30.97266451,   73.0265903,    98.12987578,   -0.22457282,    1.45505482,
        -1.36168503,  -40.74296577,   31.70887623, -112.07830091,   -0.58266908,
        1.51766388,   -1.07897827]

v4 = [  31.2903953,    71.49703828,   94.92082219,   -0.23464754,    1.44983522,
        -1.34910186,  -40.70493091,   31.80283845, -111.9954894,    -0.44937038,
        1.51500096,   -1.2126934 ]

v5 = [  31.5538529,    70.25173448,   92.20902306,   -0.24200522,    1.44545051,
        -1.33979037,  -40.65681577,   31.90413021, -111.91204064,   -0.39157496,
        1.51070409,   -1.27059098]

v6 = [  31.69751048,   69.49063582,   90.78346315,   -0.24687661,    1.44312772,
        -1.33385453,  -40.61266125,   31.95904714, -111.85256288,   -0.3680811,
        1.50838642,   -1.29412635]


def f_to_minimize(v, sts, tfs):
    def F(v, js, trans):
        x1,y1,z1,a1,b1,c1,x2,y2,z2,a2,b2,c2 = v
        js = st
        vec,quat = trans
        r.set_joint_angles(js)

        Tch = r.joints[2][4].where()
        The = FRAME(mat=MATRIX(a=a1)*MATRIX(b=b1)*MATRIX(c=c1),
                    vec=VECTOR(vec=[x1,y1,z1]))
        Teo = FRAME(mat=MATRIX(mat=quaternion_matrix(quat)[0:3,0:3].tolist()),
                    vec=VECTOR(vec=(1000.0*array(vec)).tolist()))
        Tcw = r.joints[8][4].where()
        Two = FRAME(mat=MATRIX(a=a2)*MATRIX(b=b2)*MATRIX(c=c2),
                    vec=VECTOR(vec=[x2,y2,z2]))
        T1 = Tch*The*Teo
        T2 = Tcw*Two
        print distSO3(T1.mat, T2.mat),
        print distRn(T1.vec, T2.vec),
        d = sqrt(distSE3(T1, T2, wr=100))
        #d = distSE3(T1, T2, wr=100)
        print d
        #print v
        return d
    return [F(v, st, tf) for (st, tf) in zip(sts, tfs)]

def test(maxfev=100):
    a,b = unzip(data)
    v, success = leastsq(f_to_minimize, v0, args=(a,b), maxfev=maxfev)
    print v
    The,Two = v2frame(v)
    r.Thd_eye = The
    check_calib(data)

vn0 = [  1.91421123e+01,   4.51125677e+01,   1.33165803e+02,  -1.29664036e-01,
        1.49941426e+00,  -1.50191252e+00,   4.76927273e+01,  -1.03196679e+01,
        -1.15995522e+02,  -2.47105188e+00,   2.64177402e+01,   1.19617751e+01 ]
vn1 = [  17.92481744,   43.3766091 ,  132.83023014,   -0.15549631,
          1.49446212,   -1.42420614,   50.1040372 ,  -11.95241556,
       -118.98149294,   -2.50975199,   26.46615686,   11.90391205]

vn2 = [  2.22889002e+01,   7.16207821e+01,  1.28213715e+02,  -3.04513113e-03,
         1.53008743e+00,  -1.44432835e+00,  -3.40814036e+01,   2.63671149e+01,
         -9.76091678e+01,  -1.62128188e+00,   1.52800744e+00,  -8.54553968e-02]



def v2frame(v):
    x1,y1,z1,a1,b1,c1,x2,y2,z2,a2,b2,c2 = v
    The = FRAME(mat=MATRIX(a=a1)*MATRIX(b=b1)*MATRIX(c=c1),
                vec=VECTOR(vec=[x1,y1,z1]))
    Two = FRAME(mat=MATRIX(a=a2)*MATRIX(b=b2)*MATRIX(c=c2),
                vec=VECTOR(vec=[x2,y2,z2]))
    return The, Two

